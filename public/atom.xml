<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MH&#39;s tech blog</title>
  <subtitle>分布式系统，大数据，三高技术架构</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://maohong.tech/"/>
  <updated>2017-01-02T12:59:02.000Z</updated>
  <id>http://maohong.tech/</id>
  
  <author>
    <name>maohong</name>
    <email>maohong.tech@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>storm源码编译及本地调试方法</title>
    <link href="http://maohong.tech/2016/07/13/storm%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%8F%8A%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95%E6%96%B9%E6%B3%95/"/>
    <id>http://maohong.tech/2016/07/13/storm源码编译及本地调试方法/</id>
    <published>2016-07-13T15:53:12.000Z</published>
    <updated>2017-01-02T12:59:02.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;基础环境&quot;&gt;&lt;a href=&quot;#基础环境&quot; class=&quot;headerlink&quot; title=&quot;基础环境&quot;&gt;&lt;/a&gt;基础环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;IDE开发环境：intelliJIdea&lt;/li&gt;
&lt;li&gt;JDK1.7  64bit&lt;/li&gt;
&lt;li&gt;intelliJIdea安装maven插件，配置好仓库源&lt;/li&gt;
&lt;li&gt;intelliJIdea安装clojure插件Cursive（需要注册并获取一个license，否则只能使用30天）&lt;/li&gt;
&lt;li&gt;如果需要自己创建clojure项目进行开发，需要安装leiningen，&lt;a href=&quot;http://leiningen.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;源码获取&quot;&gt;&lt;a href=&quot;#源码获取&quot; class=&quot;headerlink&quot; title=&quot;源码获取&quot;&gt;&lt;/a&gt;源码获取&lt;/h2&gt;&lt;p&gt;从github checkout代码到本地即可，&lt;a href=&quot;https://github.com/apache/storm.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/apache/storm.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我这里编译的是我们目前正在用的0.10.0版本的代码。&lt;/p&gt;
&lt;h2 id=&quot;导入idea及编译&quot;&gt;&lt;a href=&quot;#导入idea及编译&quot; class=&quot;headerlink&quot; title=&quot;导入idea及编译&quot;&gt;&lt;/a&gt;导入idea及编译&lt;/h2&gt;&lt;p&gt;打开idea，新建project，从源码导入，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20160713-storm%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%8F%8A%E8%B0%83%E8%AF%95/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;导入后，idea会自动根据pom.xml下载相关依赖包，部分依赖包如果下载不到，需要手动添加。完成后，可以看到project的module如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20160713-storm%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%8F%8A%E8%B0%83%E8%AF%95/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这时候，通过idea就可以直接跟踪看源码了，但直接运行storm-starter中的例子还是会报错并提示有些类找不到，经查看是clojure的代码还未编译出class文件。可以在源码目录下执行mvn compile进行编译。&lt;/p&gt;
&lt;h2 id=&quot;使用idea调试源码&quot;&gt;&lt;a href=&quot;#使用idea调试源码&quot; class=&quot;headerlink&quot; title=&quot;使用idea调试源码&quot;&gt;&lt;/a&gt;使用idea调试源码&lt;/h2&gt;&lt;p&gt;编译完成后，可以直接启动storm-starter中的例子运行。期间可能出现找不到类，检查classpath，依赖包的scope由provided改为compile。&lt;/p&gt;
&lt;p&gt;在源代码中加断点，run或者debug即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2739 [main] INFO  b.s.u.Utils - Using defaults.yaml from resources&lt;br&gt;4546 [main] INFO  b.s.u.Utils - Using defaults.yaml from resources&lt;br&gt;5218 [main] INFO  b.s.zookeeper - Starting inprocess zookeeper at port 2000 and dir /var/folders/c0/0bgvmbb10jz1609_1xjqdsj00000gn/T//eeb57be9-5478-4fa9-ab31-6dfce38e7695&lt;br&gt;5243 [main] INFO  b.s.u.Utils - Using defaults.yaml from resources&lt;br&gt;5340 [main] INFO  b.s.d.nimbus - Starting Nimbus with conf {“topology.builtin.metrics.bucket.size.secs” 60, ……&lt;br&gt;5342 [main] INFO  b.s.d.nimbus - Using default scheduler&lt;br&gt;5360 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;5457 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;5529 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;5531 [main-EventThread] INFO  b.s.zookeeper - Zookeeper state update: :connected:none&lt;br&gt;6569 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6569 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6574 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6605 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6605 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6609 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6609 [main-EventThread] INFO  b.s.zookeeper - Zookeeper state update: :connected:none&lt;br&gt;6617 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6618 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6620 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6621 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6623 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6625 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6649 [main-EventThread] INFO  b.s.zookeeper - Zookeeper state update: :connected:none&lt;br&gt;6652 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6653 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6657 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6671 [main] INFO  b.s.d.supervisor - Starting Supervisor with conf {“topology.builtin.metrics.bucket.size.secs” 60, ……&lt;br&gt;6693 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6694 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6697 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6697 [main-EventThread] INFO  b.s.zookeeper - Zookeeper state update: :connected:none&lt;br&gt;6700 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6701 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6704 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6722 [main] INFO  b.s.d.supervisor - Starting supervisor with id 913c90f6-3f78-4646-8998-aa901ae3c360 at host localhost&lt;br&gt;6725 [main] INFO  b.s.d.supervisor - Starting Supervisor with conf {“topology.builtin.metrics.bucket.size.secs” 60, …..&lt;br&gt;6732 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6732 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6736 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6736 [main-EventThread] INFO  b.s.zookeeper - Zookeeper state update: :connected:none&lt;br&gt;6740 [main] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;6741 [main] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;6744 [main-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;6753 [main] INFO  b.s.d.supervisor - Starting supervisor with id 49c35a73-7500-4ea4-aaa2-4b1c1f231fd4 at host localhost&lt;br&gt;7035 [main] INFO  b.s.d.nimbus - [req 1] Access from:  principal: op:submitTopology&lt;br&gt;7113 [main] INFO  b.s.d.nimbus - Received topology submission for wordCounter with conf {“topology.max.task.parallelism” nil, “topology.submitter.principal” “”, “topology.acker.executors” nil, “topology.max.spout.pending” 20, “storm.zookeeper.superACL” nil, “topology.users” (), “topology.submitter.user” “”, “topology.kryo.register” {“storm.trident.topology.TransactionAttempt” nil, “storm.trident.spout.RichSpoutBatchId” “storm.trident.spout.RichSpoutBatchIdSerializer”}, “topology.kryo.decorators” (), “storm.id” “wordCounter-1-1468420782”, “topology.name” “wordCounter”}&lt;br&gt;7123 [main] INFO  b.s.d.nimbus - nimbus file location:/var/folders/c0/0bgvmbb10jz1609_1xjqdsj00000gn/T//333ed6da-9ef5-4781-bd82-4f315facd4a8/nimbus/stormdist/wordCounter-1-1468420782&lt;br&gt;7152 [main] INFO  b.s.d.nimbus - Activating wordCounter: wordCounter-1-1468420782&lt;br&gt;7346 [main] INFO  b.s.s.EvenScheduler - Available slots: ([“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1028] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1029] [“913c90f6-3f78-4646-8998-aa901ae3c360” 1024] [“913c90f6-3f78-4646-8998-aa901ae3c360” 1025] [“913c90f6-3f78-4646-8998-aa901ae3c360” 1026])&lt;br&gt;7398 [main] INFO  b.s.d.nimbus - Setting new assignment for topology id wordCounter-1-1468420782: #backtype.storm.daemon.common.Assignment{:master-code-dir “/var/folders/c0/0bgvmbb10jz1609_1xjqdsj00000gn/T//333ed6da-9ef5-4781-bd82-4f315facd4a8/nimbus/stormdist/wordCounter-1-1468420782”, :node-&amp;gt;host {“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” “localhost”}, :executor-&amp;gt;node+port {[8 8] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [12 12] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [2 2] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [7 7] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [22 22] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [3 3] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [24 24] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [1 1] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [18 18] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [6 6] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [20 20] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [9 9] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [23 23] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [11 11] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [16 16] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [13 13] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [19 19] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [21 21] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [5 5] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [26 26] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [10 10] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [14 14] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [4 4] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [15 15] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [25 25] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027], [17 17] [“49c35a73-7500-4ea4-aaa2-4b1c1f231fd4” 1027]}, :executor-&amp;gt;start-time-secs {[8 8] 1468420782, [12 12] 1468420782, [2 2] 1468420782, [7 7] 1468420782, [22 22] 1468420782, [3 3] 1468420782, [24 24] 1468420782, [1 1] 1468420782, [18 18] 1468420782, [6 6] 1468420782, [20 20] 1468420782, [9 9] 1468420782, [23 23] 1468420782, [11 11] 1468420782, [16 16] 1468420782, [13 13] 1468420782, [19 19] 1468420782, [21 21] 1468420782, [5 5] 1468420782, [26 26] 1468420782, [10 10] 1468420782, [14 14] 1468420782, [4 4] 1468420782, [15 15] 1468420782, [25 25] 1468420782, [17 17] 1468420782}}&lt;br&gt;7751 [Thread-7] INFO  b.s.d.supervisor - Extracting resources from jar at /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/lib/ant-javafx.jar to /var/folders/c0/0bgvmbb10jz1609_1xjqdsj00000gn/T//29645b09-90e9-4b9a-a657-60c418f92841/supervisor/stormdist/wordCounter-1-1468420782/resources&lt;br&gt;7788 [Thread-8] INFO  b.s.d.supervisor - Launching worker with assignment {:storm-id “wordCounter-1-1468420782”, :executors [[8 8] [12 12] [2 2] [7 7] [22 22] [3 3] [24 24] [1 1] [18 18] [6 6] [20 20] [9 9] [23 23] [11 11] [16 16] [13 13] [19 19] [21 21] [5 5] [26 26] [10 10] [14 14] [4 4] [15 15] [25 25] [17 17]]} for this supervisor 49c35a73-7500-4ea4-aaa2-4b1c1f231fd4 on port 1027 with id 9dd8aeac-1cd6-467a-a84c-2637d0825d99&lt;br&gt;7791 [Thread-8] INFO  b.s.d.worker - Launching worker for wordCounter-1-1468420782 on 49c35a73-7500-4ea4-aaa2-4b1c1f231fd4:1027 with id 9dd8aeac-1cd6-467a-a84c-2637d0825d99 and conf {“topology.builtin.metrics.bucket.size.secs” 60, ……&lt;br&gt;7793 [Thread-8] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;7794 [Thread-8] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;7798 [Thread-8-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;7798 [Thread-8-EventThread] INFO  b.s.zookeeper - Zookeeper state update: :connected:none&lt;br&gt;7801 [Thread-8] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;7802 [Thread-8] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;7805 [Thread-8-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;7809 [Thread-8] INFO  b.s.s.a.AuthUtils - Got AutoCreds []&lt;br&gt;7811 [Thread-8] INFO  b.s.d.worker - Reading Assignments.&lt;br&gt;7881 [Thread-8] INFO  b.s.d.worker - Launching receive-thread for 49c35a73-7500-4ea4-aaa2-4b1c1f231fd4:1027&lt;br&gt;7884 [Thread-9-worker-receiver-thread-0] INFO  b.s.m.loader - Starting receive-thread: [stormId: wordCounter-1-1468420782, port: 1027, thread-id: 0 ]&lt;br&gt;8261 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[8 8]&lt;br&gt;8285 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[8 8]&lt;br&gt;8300 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[8 8]&lt;br&gt;8311 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[12 12]&lt;br&gt;8329 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[12 12]&lt;br&gt;8331 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[12 12]&lt;br&gt;8340 [Thread-8] INFO  b.s.d.executor - Loading executor $spoutcoord-spout0:[2 2]&lt;br&gt;8343 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks $spoutcoord-spout0:[2 2]&lt;br&gt;8346 [Thread-8] INFO  b.s.d.executor - Finished loading executor $spoutcoord-spout0:[2 2]&lt;br&gt;8355 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[7 7]&lt;br&gt;8372 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[7 7]&lt;br&gt;8375 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[7 7]&lt;br&gt;8381 [Thread-8] INFO  b.s.d.executor - Loading executor b-3:[22 22]&lt;br&gt;8401 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-3:[22 22]&lt;br&gt;8404 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-3:[22 22]&lt;br&gt;8412 [Thread-8] INFO  b.s.d.executor - Loading executor &lt;strong&gt;acker:[3 3]&lt;br&gt;8414 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks &lt;/strong&gt;acker:[3 3]&lt;br&gt;8424 [Thread-8] INFO  b.s.d.executor - Timeouts disabled for executor &lt;strong&gt;acker:[3 3]&lt;br&gt;8425 [Thread-8] INFO  b.s.d.executor - Finished loading executor &lt;/strong&gt;acker:[3 3]&lt;br&gt;8443 [Thread-8] INFO  b.s.d.executor - Loading executor b-5:[24 24]&lt;br&gt;8465 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-5:[24 24]&lt;br&gt;8467 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-5:[24 24]&lt;br&gt;8530 [Thread-8] INFO  b.s.d.executor - Loading executor $mastercoord-bg0:[1 1]&lt;br&gt;8539 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks $mastercoord-bg0:[1 1]&lt;br&gt;8576 [Thread-8] INFO  b.s.d.executor - Finished loading executor $mastercoord-bg0:[1 1]&lt;br&gt;8603 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[18 18]&lt;br&gt;8633 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[18 18]&lt;br&gt;8635 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[18 18]&lt;br&gt;8646 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[6 6]&lt;br&gt;8681 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[6 6]&lt;br&gt;8683 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[6 6]&lt;br&gt;8719 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[20 20]&lt;br&gt;8757 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[20 20]&lt;br&gt;8763 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[20 20]&lt;br&gt;8782 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[9 9]&lt;br&gt;8808 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[9 9]&lt;br&gt;8818 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[9 9]&lt;br&gt;8828 [Thread-8] INFO  b.s.d.executor - Loading executor b-4:[23 23]&lt;br&gt;8847 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-4:[23 23]&lt;br&gt;8851 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-4:[23 23]&lt;br&gt;8858 [refresh-active-timer] INFO  b.s.d.worker - All connections are ready for worker 49c35a73-7500-4ea4-aaa2-4b1c1f231fd4:1027 with id 9dd8aeac-1cd6-467a-a84c-2637d0825d99&lt;br&gt;8864 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[11 11]&lt;br&gt;8877 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[11 11]&lt;br&gt;8879 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[11 11]&lt;br&gt;8886 [Thread-8] INFO  b.s.d.executor - Loading executor &lt;strong&gt;system:[-1 -1]&lt;br&gt;8887 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks &lt;/strong&gt;system:[-1 -1]&lt;br&gt;8890 [Thread-8] INFO  b.s.d.executor - Finished loading executor &lt;strong&gt;system:[-1 -1]&lt;br&gt;8914 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[16 16]&lt;br&gt;9052 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[16 16]&lt;br&gt;9055 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[16 16]&lt;br&gt;9070 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[13 13]&lt;br&gt;9081 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[13 13]&lt;br&gt;9089 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[13 13]&lt;br&gt;9116 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[19 19]&lt;br&gt;9129 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[19 19]&lt;br&gt;9132 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[19 19]&lt;br&gt;9148 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[21 21]&lt;br&gt;9160 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[21 21]&lt;br&gt;9163 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[21 21]&lt;br&gt;9178 [Thread-8] INFO  b.s.d.executor - Loading executor b-1:[5 5]&lt;br&gt;9192 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-1:[5 5]&lt;br&gt;9194 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-1:[5 5]&lt;br&gt;9204 [Thread-8] INFO  b.s.d.executor - Loading executor spout1:[26 26]&lt;br&gt;9205 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks spout1:[26 26]&lt;br&gt;9208 [Thread-8] INFO  b.s.d.executor - Finished loading executor spout1:[26 26]&lt;br&gt;9220 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[10 10]&lt;br&gt;9226 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[10 10]&lt;br&gt;9228 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[10 10]&lt;br&gt;9234 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[14 14]&lt;br&gt;9237 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[14 14]&lt;br&gt;9239 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[14 14]&lt;br&gt;9244 [Thread-8] INFO  b.s.d.executor - Loading executor b-0:[4 4]&lt;br&gt;9248 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-0:[4 4]&lt;br&gt;9249 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-0:[4 4]&lt;br&gt;9255 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[15 15]&lt;br&gt;9260 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[15 15]&lt;br&gt;9261 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[15 15]&lt;br&gt;9273 [Thread-8] INFO  b.s.d.executor - Loading executor spout0:[25 25]&lt;br&gt;9275 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks spout0:[25 25]&lt;br&gt;9277 [Thread-8] INFO  b.s.d.executor - Finished loading executor spout0:[25 25]&lt;br&gt;9284 [Thread-8] INFO  b.s.d.executor - Loading executor b-2:[17 17]&lt;br&gt;9289 [Thread-8] INFO  b.s.d.executor - Loaded executor tasks b-2:[17 17]&lt;br&gt;9291 [Thread-8] INFO  b.s.d.executor - Finished loading executor b-2:[17 17]&lt;br&gt;9298 [Thread-8] INFO  b.s.d.worker - Worker has topology config {“topology.builtin.metrics.bucket.size.secs” 60, ……&lt;br&gt;9298 [Thread-8] INFO  b.s.d.worker - Worker 9dd8aeac-1cd6-467a-a84c-2637d0825d99 for storm wordCounter-1-1468420782 on 49c35a73-7500-4ea4-aaa2-4b1c1f231fd4:1027 has finished loading&lt;br&gt;9298 [Thread-8] INFO  b.s.config - SET worker-user 9dd8aeac-1cd6-467a-a84c-2637d0825d99&lt;br&gt;9875 [Thread-27-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(18)&lt;br&gt;9882 [Thread-35-b-4] INFO  b.s.d.executor - Preparing bolt b-4:(23)&lt;br&gt;9882 [Thread-41-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(16)&lt;br&gt;9883 [Thread-13-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(12)&lt;br&gt;9883 [Thread-59-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(15)&lt;br&gt;9883 [Thread-47-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(21)&lt;br&gt;9893 [Thread-35-b-4] INFO  b.s.d.executor - Prepared bolt b-4:(23)&lt;br&gt;9896 [Thread-47-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(21)&lt;br&gt;9896 [Thread-59-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(15)&lt;br&gt;9896 [Thread-27-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(18)&lt;br&gt;9896 [Thread-13-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(12)&lt;br&gt;9896 [Thread-41-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(16)&lt;br&gt;9898 [Thread-31-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(20)&lt;br&gt;9898 [Thread-15-$spoutcoord-spout0] INFO  b.s.d.executor - Preparing bolt $spoutcoord-spout0:(2)&lt;br&gt;9899 [Thread-61-spout0] INFO  b.s.d.executor - Preparing bolt spout0:(25)&lt;br&gt;9900 [Thread-15-$spoutcoord-spout0] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;9900 [Thread-61-spout0] INFO  b.s.d.executor - Prepared bolt spout0:(25)&lt;br&gt;9901 [Thread-15-$spoutcoord-spout0] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;9901 [Thread-31-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(20)&lt;br&gt;9907 [Thread-15-$spoutcoord-spout0-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;9908 [Thread-43-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(13)&lt;br&gt;9908 [Thread-37-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(11)&lt;br&gt;9908 [Thread-63-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(17)&lt;br&gt;9910 [Thread-43-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(13)&lt;br&gt;9910 [Thread-37-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(11)&lt;br&gt;9911 [Thread-63-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(17)&lt;br&gt;9918 [Thread-49-b-1] INFO  b.s.d.executor - Preparing bolt b-1:(5)&lt;br&gt;9918 [Thread-39-&lt;/strong&gt;system] INFO  b.s.d.executor - Preparing bolt &lt;strong&gt;system:(-1)&lt;br&gt;9918 [Thread-29-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(6)&lt;br&gt;9920 [Thread-49-b-1] INFO  b.s.d.executor - Prepared bolt b-1:(5)&lt;br&gt;9920 [Thread-29-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(6)&lt;br&gt;9921 [Thread-15-$spoutcoord-spout0] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;9922 [Thread-15-$spoutcoord-spout0] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;9924 [Thread-39-&lt;/strong&gt;system] INFO  b.s.d.executor - Prepared bolt &lt;strong&gt;system:(-1)&lt;br&gt;9929 [Thread-51-spout1] INFO  b.s.d.executor - Opening spout spout1:(26)&lt;br&gt;9929 [Thread-25-$mastercoord-bg0] INFO  b.s.d.executor - Opening spout $mastercoord-bg0:(1)&lt;br&gt;9929 [Thread-15-$spoutcoord-spout0-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;9938 [Thread-51-spout1] INFO  b.s.d.executor - Opened spout spout1:(26)&lt;br&gt;9937 [Thread-25-$mastercoord-bg0] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;9940 [Thread-25-$mastercoord-bg0] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;9940 [Thread-33-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(9)&lt;br&gt;9942 [Thread-51-spout1] INFO  b.s.d.executor - Activating spout spout1:(26)&lt;br&gt;9942 [Thread-33-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(9)&lt;br&gt;9947 [Thread-53-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(10)&lt;br&gt;9950 [Thread-53-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(10)&lt;br&gt;9956 [Thread-11-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(8)&lt;br&gt;9956 [Thread-45-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(19)&lt;br&gt;9957 [Thread-23-b-5] INFO  b.s.d.executor - Preparing bolt b-5:(24)&lt;br&gt;9958 [Thread-23-b-5] INFO  b.s.d.executor - Prepared bolt b-5:(24)&lt;br&gt;9958 [Thread-11-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(8)&lt;br&gt;9958 [Thread-17-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(7)&lt;br&gt;9959 [Thread-55-b-2] INFO  b.s.d.executor - Preparing bolt b-2:(14)&lt;br&gt;9959 [Thread-19-b-3] INFO  b.s.d.executor - Preparing bolt b-3:(22)&lt;br&gt;9960 [Thread-19-b-3] INFO  b.s.d.executor - Prepared bolt b-3:(22)&lt;br&gt;9960 [Thread-25-$mastercoord-bg0-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;9960 [Thread-17-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(7)&lt;br&gt;9962 [Thread-45-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(19)&lt;br&gt;9963 [Thread-55-b-2] INFO  b.s.d.executor - Prepared bolt b-2:(14)&lt;br&gt;9964 [Thread-57-b-0] INFO  b.s.d.executor - Preparing bolt b-0:(4)&lt;br&gt;9964 [Thread-21-&lt;/strong&gt;acker] INFO  b.s.d.executor - Preparing bolt &lt;strong&gt;acker:(3)&lt;br&gt;9965 [Thread-57-b-0] INFO  b.s.d.executor - Prepared bolt b-0:(4)&lt;br&gt;9966 [Thread-21-&lt;/strong&gt;acker] INFO  b.s.d.executor - Prepared bolt __acker:(3)&lt;br&gt;9969 [Thread-15-$spoutcoord-spout0] INFO  b.s.d.executor - Prepared bolt $spoutcoord-spout0:(2)&lt;br&gt;9971 [Thread-25-$mastercoord-bg0] INFO  b.s.u.StormBoundedExponentialBackoffRetry - The baseSleepTimeMs [1000] the maxSleepTimeMs [30000] the maxRetries [5]&lt;br&gt;9972 [Thread-25-$mastercoord-bg0] INFO  o.a.c.f.i.CuratorFrameworkImpl - Starting&lt;br&gt;9984 [Thread-25-$mastercoord-bg0-EventThread] INFO  o.a.c.f.s.ConnectionStateManager - State change: CONNECTED&lt;br&gt;DRPC RESULT: [[0]]&lt;br&gt;9988 [Thread-25-$mastercoord-bg0] INFO  b.s.d.executor - Opened spout $mastercoord-bg0:(1)&lt;br&gt;9988 [Thread-25-$mastercoord-bg0] INFO  b.s.d.executor - Activating spout $mastercoord-bg0:(1)&lt;br&gt;DRPC RESULT: [[60]]&lt;br&gt;DRPC RESULT: [[120]]&lt;br&gt;DRPC RESULT: [[179]]&lt;br&gt;DRPC RESULT: [[239]]&lt;br&gt;DRPC RESULT: [[299]]&lt;br&gt;DRPC RESULT: [[359]]&lt;br&gt;DRPC RESULT: [[414]]&lt;br&gt;DRPC RESULT: [[474]]&lt;br&gt;DRPC RESULT: [[534]]&lt;br&gt;DRPC RESULT: [[593]]&lt;br&gt;DRPC RESULT: [[653]]&lt;br&gt;DRPC RESULT: [[713]]&lt;br&gt;DRPC RESULT: [[768]]&lt;/p&gt;
&lt;p&gt;Process finished with exit code 130&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础环境&quot;&gt;&lt;a href=&quot;#基础环境&quot; class=&quot;headerlink&quot; title=&quot;基础环境&quot;&gt;&lt;/a&gt;基础环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;IDE开发环境：intelliJIdea&lt;/li&gt;
&lt;li&gt;JDK1.7  64bit&lt;/li&gt;
&lt;li&gt;intelliJIdea安装maven插件，配置好仓库源&lt;/li&gt;
&lt;li&gt;intelliJIdea安装clojure插件Cursive（需要注册并获取一个license，否则只能使用30天）&lt;/li&gt;
&lt;li&gt;如果需要自己创建clojure项目进行开发，需要安装leiningen，&lt;a href=&quot;http://leiningen.org/&quot;&gt;下载地址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;源码获取&quot;&gt;&lt;a href=&quot;#源码获取&quot; class=&quot;headerlink&quot; title=&quot;源码获取&quot;&gt;&lt;/a&gt;源码获取&lt;/h2&gt;&lt;p&gt;从github checkout代码到本地即可，&lt;a href=&quot;https://github.com/apache/storm.git&quot;&gt;https://github.com/apache/storm.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我这里编译的是我们目前正在用的0.10.0版本的代码。&lt;/p&gt;
&lt;h2 id=&quot;导入idea及编译&quot;&gt;&lt;a href=&quot;#导入idea及编译&quot; class=&quot;headerlink&quot; title=&quot;导入idea及编译&quot;&gt;&lt;/a&gt;导入idea及编译&lt;/h2&gt;&lt;p&gt;打开idea，新建project，从源码导入，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20160713-storm%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%8F%8A%E8%B0%83%E8%AF%95/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;导入后，idea会自动根据pom.xml下载相关依赖包，部分依赖包如果下载不到，需要手动添加。完成后，可以看到project的module如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20160713-storm%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%8F%8A%E8%B0%83%E8%AF%95/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Storm" scheme="http://maohong.tech/categories/Storm/"/>
    
    
      <category term="storm" scheme="http://maohong.tech/tags/storm/"/>
    
      <category term="源码编译" scheme="http://maohong.tech/tags/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91/"/>
    
      <category term="本地调试" scheme="http://maohong.tech/tags/%E6%9C%AC%E5%9C%B0%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>kafka-0.10.0启动过程分析</title>
    <link href="http://maohong.tech/2016/07/08/kafka-0-10-0%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/"/>
    <id>http://maohong.tech/2016/07/08/kafka-0-10-0启动过程分析/</id>
    <published>2016-07-08T14:46:18.000Z</published>
    <updated>2016-07-09T13:05:27.000Z</updated>
    
    <content type="html">&lt;p&gt;kafka-0.10.0是官方出的最新稳定版本，提供了大量新的feature，具体可见&lt;a href=&quot;http://www.iteblog.com/archives/1677&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;，本文主要分析kafka-0.10-0的源码结构和启动过程。&lt;/p&gt;
&lt;h2 id=&quot;源码结构&quot;&gt;&lt;a href=&quot;#源码结构&quot; class=&quot;headerlink&quot; title=&quot;源码结构&quot;&gt;&lt;/a&gt;源码结构&lt;/h2&gt;&lt;p&gt;kafka-0.10.0的源码可以从github上fork一份，在源码目录下执行./gradlew idea生成idea项目，然后导入idea即可。这中间需要使用gradle进行依赖包的下载，导入后可以看到其源码结构如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20160708-kafka0.10.0%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;包括几大重要模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clients主要是kafka-client相关的代码，包括consumer、producer，还包括一些公共逻辑，如授权认证、序列化等。&lt;/li&gt;
&lt;li&gt;connect主要是kafka-connect模块的代码逻辑，Kafka connect是0.9版本增加的特性,支持创建和管理数据流管道。通过它可以将大数据从其它系统导入到Kafka中，也可以从Kafka中导出到其它系统，比如数据库、elastic search等。&lt;/li&gt;
&lt;li&gt;core模块是kafka的核心部分，主要包括broker的实现逻辑、producer和consumer的javaapi等。&lt;/li&gt;
&lt;li&gt;streams模块主要是kafka-streaming的实现，提供了一整套描述常见流操作的高级语言API（比如 joining, filtering以及aggregation等），我们可以基于此开发流处理应用程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;启动入口&quot;&gt;&lt;a href=&quot;#启动入口&quot; class=&quot;headerlink&quot; title=&quot;启动入口&quot;&gt;&lt;/a&gt;启动入口&lt;/h2&gt;&lt;p&gt;kafka的启动入口在core_main这个module下，入口函数如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;/span&gt;(args: &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;]): &lt;span class=&quot;type&quot;&gt;Unit&lt;/span&gt; = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; serverProps = getPropsFromArgs(args)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; kafkaServerStartable = &lt;span class=&quot;type&quot;&gt;KafkaServerStartable&lt;/span&gt;.fromProps(serverProps)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// attach shutdown handler to catch control-c&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;Runtime&lt;/span&gt;.getRuntime().addShutdownHook(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Thread&lt;/span&gt;() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;/span&gt;() = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          kafkaServerStartable.shutdown&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      kafkaServerStartable.startup&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      kafkaServerStartable.awaitShutdown&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; e: &lt;span class=&quot;type&quot;&gt;Throwable&lt;/span&gt; =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        fatal(e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.exit(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.exit(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;先从命令行指定的配置文件加载配置，然后通过KafkaServerStartable类启动broker，实际上在KafkaServerStartable中维护了一个KafkaServer对象，它通过调用KafkaServer的startup方法启动broker。&lt;/p&gt;
&lt;h2 id=&quot;broker启动过程&quot;&gt;&lt;a href=&quot;#broker启动过程&quot; class=&quot;headerlink&quot; title=&quot;broker启动过程&quot;&gt;&lt;/a&gt;broker启动过程&lt;/h2&gt;&lt;p&gt;下面并启动过程代码按启动顺序分两部分做说明。&lt;/p&gt;
&lt;p&gt;第一部分主要是核心模块的启动，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;metrics = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Metrics&lt;/span&gt;(metricConfig, reporters, kafkaMetricsTime, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        brokerState.newState(&lt;span class=&quot;type&quot;&gt;Starting&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* start scheduler */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        kafkaScheduler.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* setup zookeeper */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        zkUtils = initZk()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* start log manager */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        logManager = createLogManager(zkUtils.zkClient, brokerState)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        logManager.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* generate brokerId */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        config.brokerId =  getBrokerId&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.logIdent = &lt;span class=&quot;string&quot;&gt;&quot;[Kafka Server &quot;&lt;/span&gt; + config.brokerId + &lt;span class=&quot;string&quot;&gt;&quot;], &quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        socketServer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;SocketServer&lt;/span&gt;(config, metrics, kafkaMetricsTime)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        socketServer.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* start replica manager */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        replicaManager = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ReplicaManager&lt;/span&gt;(config, metrics, time, kafkaMetricsTime, zkUtils, kafkaScheduler, logManager,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          isShuttingDown)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        replicaManager.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* start kafka controller */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        kafkaController = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;KafkaController&lt;/span&gt;(config, zkUtils, brokerState, kafkaMetricsTime, metrics, threadNamePrefix)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        kafkaController.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* start group coordinator */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        groupCoordinator = &lt;span class=&quot;type&quot;&gt;GroupCoordinator&lt;/span&gt;(config, zkUtils, replicaManager, kafkaMetricsTime)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        groupCoordinator.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* Get the authorizer and initialize it if one is specified.*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        authorizer = &lt;span class=&quot;type&quot;&gt;Option&lt;/span&gt;(config.authorizerClassName).filter(_.nonEmpty).map &amp;#123; authorizerClassName =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; authZ = &lt;span class=&quot;type&quot;&gt;CoreUtils&lt;/span&gt;.createObject[&lt;span class=&quot;type&quot;&gt;Authorizer&lt;/span&gt;](authorizerClassName)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          authZ.configure(config.originals())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          authZ&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* start processing requests */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        apis = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;KafkaApis&lt;/span&gt;(socketServer.requestChannel, replicaManager, groupCoordinator,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          kafkaController, zkUtils, config.brokerId, config, metadataCache, metrics, authorizer)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        requestHandlerPool = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;KafkaRequestHandlerPool&lt;/span&gt;(config.brokerId, socketServer.requestChannel, apis, config.numIoThreads)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        brokerState.newState(&lt;span class=&quot;type&quot;&gt;RunningAsBroker&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;首先是初始化Metrics注册信息。&lt;/li&gt;
&lt;li&gt;接着把当前broker的状态先置为Starting。&lt;/li&gt;
&lt;li&gt;启动kafkaScheduler，其内部维护了一个ScheduledThreadPoolExecutor，用于执行broker内置的一些周期性运行的job或定时job。比如，启动自动提交时，broker会定期维护客户端的消费topic-partition的offset信息。&lt;/li&gt;
&lt;li&gt;初始化zookeeper访问工具，建立必要的数据路径。&lt;/li&gt;
&lt;li&gt;启动LogManager，也就是日志数据管理子系统，负责日志数据的创建、截断、滚动、和清理等。&lt;/li&gt;
&lt;li&gt;启动SocketServer，一个基于NIO的socker服务端，其线程模型是有一个acceptor线程来接受客户端的连接，对应这个acceptor有N个processor线程，每个processor有自己的selector来从sockets读取收到的请求。另外，有M个handler线程专门处理请求并把处理结果返回给processor线程并通过socket写回给客户端。&lt;/li&gt;
&lt;li&gt;启动ReplicaManager，也即副本管理器，用于管理每个topic-partition的副本状态，包括主从、ISR列表等。&lt;/li&gt;
&lt;li&gt;启动KafkaController，可以理解为kafka集群的中央控制器，负责全局的协调，比如选取leader，reassignment等，其自身也支持动态选举高可用。&lt;/li&gt;
&lt;li&gt;启动GroupCoordinator，主要用于broker组管理和offset管理。&lt;/li&gt;
&lt;li&gt;初始化授权认证管理器，用户可以自己通过参数authorizer.class.name指定具体的Authorizer实现。kafka自带有SimpleAclAuthorizer的简单实现。&lt;/li&gt;
&lt;li&gt;初始化KafkaApis，用于统一接收外部请求。&lt;/li&gt;
&lt;li&gt;初始化KafkaRequestHandlerPool，内部是一个线程池，用于具体处理外部请求。&lt;/li&gt;
&lt;li&gt;将当前broker的状态置为RunningAsBroker，这时，broker已经可以对外提供服务了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第二部分主要是辅助模块的启动，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Mx4jLoader&lt;/span&gt;.maybeLoad()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* start dynamic config manager */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dynamicConfigHandlers = &lt;span class=&quot;type&quot;&gt;Map&lt;/span&gt;[&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;ConfigHandler&lt;/span&gt;](&lt;span class=&quot;type&quot;&gt;ConfigType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Topic&lt;/span&gt; -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TopicConfigHandler&lt;/span&gt;(logManager, config),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                   &lt;span class=&quot;type&quot;&gt;ConfigType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Client&lt;/span&gt; -&amp;gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;ClientIdConfigHandler&lt;/span&gt;(apis.quotaManagers))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Apply all existing client configs to the ClientIdConfigHandler to bootstrap the overrides&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Move this logic to DynamicConfigManager&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;AdminUtils&lt;/span&gt;.fetchAllEntityConfigs(zkUtils, &lt;span class=&quot;type&quot;&gt;ConfigType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Client&lt;/span&gt;).foreach &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; (clientId, properties) =&amp;gt; dynamicConfigHandlers(&lt;span class=&quot;type&quot;&gt;ConfigType&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Client&lt;/span&gt;).processConfigChanges(clientId, properties)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Create the config manager. start listening to notifications&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dynamicConfigManager = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DynamicConfigManager&lt;/span&gt;(zkUtils, dynamicConfigHandlers)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dynamicConfigManager.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* tell everyone we are alive */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;val&lt;/span&gt; listeners = config.advertisedListeners.map &amp;#123;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt;(protocol, endpoint) =&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (endpoint.port == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (protocol, &lt;span class=&quot;type&quot;&gt;EndPoint&lt;/span&gt;(endpoint.host, socketServer.boundPort(protocol), endpoint.protocolType))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    (protocol, endpoint)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;kafkaHealthcheck = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;KafkaHealthcheck&lt;/span&gt;(config.brokerId, listeners, zkUtils, config.rack,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  config.interBrokerProtocolVersion)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;kafkaHealthcheck.startup()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Now that the broker id is successfully registered via KafkaHealthcheck, checkpoint it&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;checkpointBrokerId(config.brokerId)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* register broker metrics */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;registerStats()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;shutdownLatch = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;CountDownLatch&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;startupComplete.set(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;isStartingUp.set(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;AppInfoParser&lt;/span&gt;.registerAppInfo(jmxPrefix, config.brokerId.toString)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;info(&lt;span class=&quot;string&quot;&gt;&quot;started&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;启动jmx，通过参数kafka_mx4jenable控制是否启用jmx，默认为false。&lt;/li&gt;
&lt;li&gt;初始化TopicConfigHandler和ClientIdConfigHandler，前者用于处理zk上的topic配置变更信息，后者用于zk上的clientId配置变更信息。&lt;/li&gt;
&lt;li&gt;启动DynamicConfigManager，通过动态配置管理器，监听zk上的配置节点变化，并根据具体变化的配置信息调用TopicConfigHandler或ClientIdConfigHandler更新配置。&lt;/li&gt;
&lt;li&gt;启动KafkaHealthcheck，用于在zk上注册当前broker节点信息，以便节点退出时其他broker和consumer能监听到，目前的节点健康度判断比较简单，只是单纯的看zk上的节点是否存在。&lt;/li&gt;
&lt;li&gt;最后，在本地对当前broker做个checkpoint，并注册jmx bean信息&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;kafka-0.10.0是官方出的最新稳定版本，提供了大量新的feature，具体可见&lt;a href=&quot;http://www.iteblog.com/archives/1677&quot;&gt;这里&lt;/a&gt;，本文主要分析kafka-0.10-0的源码结构和启动过程。&lt;/p&gt;
&lt;h2 id=&quot;源码结构&quot;&gt;&lt;a href=&quot;#源码结构&quot; class=&quot;headerlink&quot; title=&quot;源码结构&quot;&gt;&lt;/a&gt;源码结构&lt;/h2&gt;&lt;p&gt;kafka-0.10.0的源码可以从github上fork一份，在源码目录下执行./gradlew idea生成idea项目，然后导入idea即可。这中间需要使用gradle进行依赖包的下载，导入后可以看到其源码结构如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20160708-kafka0.10.0%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E5%88%86%E6%9E%90/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;包括几大重要模块：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;clients主要是kafka-client相关的代码，包括consumer、producer，还包括一些公共逻辑，如授权认证、序列化等。&lt;/li&gt;
&lt;li&gt;connect主要是kafka-connect模块的代码逻辑，Kafka connect是0.9版本增加的特性,支持创建和管理数据流管道。通过它可以将大数据从其它系统导入到Kafka中，也可以从Kafka中导出到其它系统，比如数据库、elastic search等。&lt;/li&gt;
&lt;li&gt;core模块是kafka的核心部分，主要包括broker的实现逻辑、producer和consumer的javaapi等。&lt;/li&gt;
&lt;li&gt;streams模块主要是kafka-streaming的实现，提供了一整套描述常见流操作的高级语言API（比如 joining, filtering以及aggregation等），我们可以基于此开发流处理应用程序。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Kafka" scheme="http://maohong.tech/categories/Kafka/"/>
    
    
      <category term="kafka" scheme="http://maohong.tech/tags/kafka/"/>
    
      <category term="源码分析" scheme="http://maohong.tech/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Storm的消息可靠处理机制</title>
    <link href="http://maohong.tech/2015/11/05/Storm%E7%9A%84%E6%B6%88%E6%81%AF%E5%8F%AF%E9%9D%A0%E5%A4%84%E7%90%86%E6%9C%BA%E5%88%B6/"/>
    <id>http://maohong.tech/2015/11/05/Storm的消息可靠处理机制/</id>
    <published>2015-11-05T12:51:50.000Z</published>
    <updated>2017-01-23T03:15:42.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;提交进入Storm运行的topology实际上是一个有向无环图（DAG），其中的节点是由spout和bolt组成，边则可以理解为消息从一个节点到传输到另一个节点的过程。对于spout产生的tuple，只有在topology上处理完毕后，才认为这个tuple被storm可靠处理。&lt;/p&gt;
&lt;p&gt;Storm提供了可靠处理消息（storm中的通用名叫tuple）的框架，我们在写一个topology程序时，若需要保证spout产生的消息的可靠处理，需要做到两点：&lt;/p&gt;
&lt;p&gt;第一是spout/bolt每生成一个新的tuple都告诉storm一下（其中spout发出的tuple有个id叫rootId），从而让storm能够追踪rootId和每个衍生tuple的处理状态。&lt;/p&gt;
&lt;p&gt;第二是每个tuple被下游bolt处理完毕后，无论处理成功或失败，也再告诉storm一下，从而让storm知道是否需要spout重新发送rootId。&lt;/p&gt;
&lt;p&gt;做了这两件事，storm就能知道这个tuple是否被处理完毕。如果是处理成功了的，就说明最初从spout发出的tuple（rootId）已在topology中处理完毕，无需spout重新发送。如果是处理失败的，storm则会告知spout重新发送rootId这个tuple。&lt;/p&gt;
&lt;h2 id=&quot;在程序中实现消息可靠处理&quot;&gt;&lt;a href=&quot;#在程序中实现消息可靠处理&quot; class=&quot;headerlink&quot; title=&quot;在程序中实现消息可靠处理&quot;&gt;&lt;/a&gt;在程序中实现消息可靠处理&lt;/h2&gt;&lt;p&gt;那在写一个topology时，我们该如何做上面提到的两件事呢？&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;Storm提供了BaseRichBolt抽象类（实现了IRichBolt接口），一个示例bolt如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SplitSentence&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseRichBolt&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    OutputCollector _collector;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Map conf, TopologyContext context, OutputCollector collector)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _collector = collector;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tuple t)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String sentence = t.getString(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(String word: sentence.split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//1. 告诉storm生成了一个新的tuple，并且这个tuple的锚点是tuple&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            _collector.emit(t, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Values(word));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _collector.ack(t); &lt;span class=&quot;comment&quot;&gt;//2. 告诉storm，t这个tuple已处理完毕&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;declareOutputFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(OutputFieldsDeclarer declarer)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        declarer.declare(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Fields(&lt;span class=&quot;string&quot;&gt;&quot;word&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段代码就做了这两件事，一是输出新的tuple并告知storm，二是对当前tuple t处理完毕后，告知storm。&lt;/p&gt;
&lt;p&gt;对于第一件事，这里要注意的是，在BaseRichBolt中输出一个新的tuple（示例中是word）时，必须指定其锚点（即当前bolt正在处理的tuple），因为输出新的tuple会继续被下游bolt处理，这个锚点tuple和下游tuple之间的路径就是DAG的一条边。如果不指定锚点，则可以理解为storm不知道这条边的存在，也就不会对新输出的tuple进行跟踪了。&lt;/p&gt;
&lt;p&gt;如果我们确实不需要保证消息的可靠处理，则使用以下方式输出新tuple即可。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;_collector.emit(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Values(word));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外，一个tuple的锚点tuple可以有多个，比如如下代码，新输出的tuple的锚点就是tuple1和tuple2。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;List anchors = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;anchors.add(tuple1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;anchors.add(tuple2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;_collector.emit(anchors, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Values(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于第二件事，通过调用OutputCollector的ack或fail方法，即可告知storm当前tuple的处理结果。比如，假设我们在bolt中做一些操作的时候出现异常（比如访问redis、DB、hdfs等），可以调fail方法快速重放rootId，避免等到storm判断这个tuple处理超时后才重放。&lt;/p&gt;
&lt;h2 id=&quot;更简便的方式&quot;&gt;&lt;a href=&quot;#更简便的方式&quot; class=&quot;headerlink&quot; title=&quot;更简便的方式&quot;&gt;&lt;/a&gt;更简便的方式&lt;/h2&gt;&lt;p&gt;很明显，以上方式有几个弊端：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;输出新tuple和对tuple的ack/fail操作需要我们自己维护，代价很高，容易遗忘。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;storm是在内存中维护每个tuple的处理状态，如果只对tuple进行锚点标记但处理完毕后忘记ack/fail，在tuple量非常大时，有内存溢出的风险。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;鉴于此，storm提供了BaseBasicBolt抽象类（实现了IBasicBolt接口）来帮助我们实现对每个tuple的锚点标记和ack/fail。&lt;br&gt;前面的例子可改写如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SplitSentence&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseBasicBolt&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Tuple tuple, BasicOutputCollector collector)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        String sentence = tuple.getString(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(String word: sentence.split(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            collector.emit(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Values(word));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;declareOutputFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(OutputFieldsDeclarer declarer)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        declarer.declare(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Fields(&lt;span class=&quot;string&quot;&gt;&quot;word&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可见，在代码中，我们只需要关心bolt的处理逻辑即可，至于标记锚点和ack/fail，均不用关心。&lt;/p&gt;
&lt;p&gt;细究一下storm框架对IBasicBolt的处理可知，在创建topology时，IBasicBolt是被封装在BasicBoltExecutor类（实现了IRichBolt接口）中处理的。&lt;/p&gt;
&lt;p&gt;构建topology时的setBolt方法：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20151105/bolt-executor.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;原理-amp-示例&quot;&gt;&lt;a href=&quot;#原理-amp-示例&quot; class=&quot;headerlink&quot; title=&quot;原理&amp;amp;示例&quot;&gt;&lt;/a&gt;原理&amp;amp;示例&lt;/h2&gt;&lt;p&gt;刚刚提到对每个topology，storm都在内存中维护其tuple的处理状态，那么对于一个大规模集群，storm是如何高效的维护大量tuple的处理状态的呢？&lt;/p&gt;
&lt;p&gt;其实，topology在运行时，内部有一组特殊的任务叫acker，专门用来做tuple的ack/fail。当一个root tuple（spout输出的tuple）在DAG中处理完毕后，acker会向产生该tuple的spout发送消息来ack这个tuple。&lt;/p&gt;
&lt;p&gt;我们可通过参数Config.TOPOLOGY_ACKER_EXECUTORS指定topology中的acker任务的数量，默认是与topology中的worker数相同，在处理大量消息的场景下，可以通过此参数增加topology的acker任务数，以提高对message做ack/fail的效率。&lt;/p&gt;
&lt;p&gt;storm通过给每个tuple设置一个全局唯一id，并在输出tuple和tuple处理完毕时收集tuple的id，并进行异或运算，巧妙的实现tuple状态的维护。先看下图示例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20151105/storm-ack.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在这个topology其中包含一个spout，3个bolt和一个acker bolt，紫色线表示tuple的流向，绿色线表示每个bolt处理完tuple后的ack/fail调用，红色线表示acker回调spout的ack/fail方法来标记root tuple处理完毕。&lt;/p&gt;
&lt;p&gt;以下是storm的ack框架对tuple的处理状态维护过程说明：&lt;/p&gt;
&lt;p&gt;第(1)(2)步，spout发送T1到bolt1，发送T2到bolt2，T1和T2具有相同的内容（可以认为都把spout的输出作为自己的输入）。每条消息都会有一个全局唯一id，T1的锚点为&lt;rootid,t1&gt;，T2的锚点为&lt;rootid,t2&gt;。&lt;/rootid,t2&gt;&lt;/rootid,t1&gt;&lt;/p&gt;
&lt;p&gt;第(3)步，spout发送完毕T1、T2后，在acker中注册一条记录rootId=T1^T2。&lt;/p&gt;
&lt;p&gt;第(4)(5)步，bolt1收到T1处理完毕后对T1进行ack并发送T3,T4到bolt3，所以在acker中注册T1,T3,T4，acker中的跟踪项变为rootId=T1^T2^T1^T3^T4=T2^T3^T4&lt;/p&gt;
&lt;p&gt;第(6)(7)步，bolt2收到T2处理完毕后对T2进行ack并发送T5,T6,T7到bolt4，所以在acker中注册T2,T5,T6,T7，acker中的跟踪项变为rootId=T2^T3^T4^T2^T5^T6^T7=T3^T4^T5^T6^T7&lt;/p&gt;
&lt;p&gt;第(8)步，bolt3收到T3,T4处理完毕后对T3,T4进行ack，没有输出新的tuple，所以在acker中注册T3,T4，acker中的跟踪项变为rootId=T3^T4^T5^T6^T7^T3^T4=T5^T6^T7&lt;/p&gt;
&lt;p&gt;第(9)步，bolt4收到T5,T6,T7处理完毕后对T5,T6,T7进行ack，没有输出新的tuple，所以在acker中注册T5,T6,T7，acker中的跟踪项变为rootId=T5^T6^T7^T5^T6^T7=0&lt;/p&gt;
&lt;p&gt;第(10)步，acker bolt发现rootId对应的追踪值为0，说明该rootId对应的源消息以及衍生出来的所有消息（bolt1,bolt2新输出的消息）都被成功处理完毕。于是acker bolt会回调spout的ack方法，标识消息rootId已被topology处理成功。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;提交进入Storm运行的topology实际上是一个有向无环图（DAG），其中的节点是由spout和bolt组成，边则可以理解为消息从一个节点到传输到另一个节点的过程。对于spout产生的tuple，只有在topology上处理完毕后，才认为这个tuple被storm可靠处理。&lt;/p&gt;
&lt;p&gt;Storm提供了可靠处理消息（storm中的通用名叫tuple）的框架，我们在写一个topology程序时，若需要保证spout产生的消息的可靠处理，需要做到两点：&lt;/p&gt;
&lt;p&gt;第一是spout/bolt每生成一个新的tuple都告诉storm一下（其中spout发出的tuple有个id叫rootId），从而让storm能够追踪rootId和每个衍生tuple的处理状态。&lt;/p&gt;
&lt;p&gt;第二是每个tuple被下游bolt处理完毕后，无论处理成功或失败，也再告诉storm一下，从而让storm知道是否需要spout重新发送rootId。&lt;/p&gt;
&lt;p&gt;做了这两件事，storm就能知道这个tuple是否被处理完毕。如果是处理成功了的，就说明最初从spout发出的tuple（rootId）已在topology中处理完毕，无需spout重新发送。如果是处理失败的，storm则会告知spout重新发送rootId这个tuple。&lt;/p&gt;
&lt;h2 id=&quot;在程序中实现消息可靠处理&quot;&gt;&lt;a href=&quot;#在程序中实现消息可靠处理&quot; class=&quot;headerlink&quot; title=&quot;在程序中实现消息可靠处理&quot;&gt;&lt;/a&gt;在程序中实现消息可靠处理&lt;/h2&gt;&lt;p&gt;那在写一个topology时，我们该如何做上面提到的两件事呢？&lt;br&gt;
    
    </summary>
    
      <category term="Storm" scheme="http://maohong.tech/categories/Storm/"/>
    
    
      <category term="storm" scheme="http://maohong.tech/tags/storm/"/>
    
      <category term="实时计算" scheme="http://maohong.tech/tags/%E5%AE%9E%E6%97%B6%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Spark on yarn的内存分配问题</title>
    <link href="http://maohong.tech/2015/08/11/Spark-on-yarn%E7%9A%84%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E9%97%AE%E9%A2%98/"/>
    <id>http://maohong.tech/2015/08/11/Spark-on-yarn的内存分配问题/</id>
    <published>2015-08-11T05:23:13.000Z</published>
    <updated>2017-01-23T03:15:33.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在测试spark on yarn时，发现一些内存分配上的问题，具体如下。&lt;/p&gt;
&lt;p&gt;在$SPARK_HOME/conf/spark-env.sh中配置如下参数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPARK_EXECUTOR_INSTANCES=4            &lt;em&gt;在yarn集群中启动的executor进程数&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SPARK_EXECUTOR_MEMORY=2G              &lt;em&gt;为每个executor进程分配的内存大小&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SPARK_DRIVER_MEMORY=1G                &lt;em&gt;为spark-driver进程分配的内存大小&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;执行$SPARK_HOME/bin/spark-sql –master yarn，按yarn-client模式启动spark-sql交互命令行（即driver程序运行在本地，而非yarn的container中），日志显示的关于AppMaster和Executor的内存信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;日志显示，AppMaster的内存是896MB，其中包含了384MB的memoryOverhead；启动了5个executor，第一个的可用内存是530.3MB，其余每个Executor的可用内存是1060.3MB。&lt;/p&gt;
&lt;p&gt;到yarnUI看下资源使用情况，共启动了5个container，占用内存13G，其中一台NodeManager启动了2个container，占用内存4G（1个AppMaster占1G、另一个占3G），另外3台各启了1个container，每个占用3G内存。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;再到sparkUI看下executors的情况，这里有5个executor，其中driver是运行在执行spark-sql命令的本地服务器上，另外4个是运行在yarn集群中。Driver的可用storage memory为530.3MB，另外4个都是1060.3MB（与日志信息一致）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么问题来了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Yarn为container分配的最小内存由yarn.scheduler.minimum-allocation-mb参数决定，默认是1G，从yarnUI中看确实如此，可为何spark的日志里显示AppMaster的实际内存是896-384=512MB呢？384MB是怎么算出来的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;spark配置文件里指定了每个executor的内存为2G，为何日志和sparkUI上显示的是1060.3MB？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;driver的内存配置为1G，为何sparkUI里显示的是530.3MB呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为何yarn中每个container分配的内存是3G，而不是executor需要的2G呢？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;问题解析&quot;&gt;&lt;a href=&quot;#问题解析&quot; class=&quot;headerlink&quot; title=&quot;问题解析&quot;&gt;&lt;/a&gt;问题解析&lt;/h2&gt;&lt;p&gt;进过一番调研，发现这里有些概念容易混淆，整理如下，序号对应上面的问题：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;(1) spark的yarn-client向ResourceManager申请提交作业/启动AppMaster时，会判断是否是集群模式，如果是集群模式，则AppMaster的内存大小与driver内存大小一致，否则由spark.yarn.am.memory决定，这个参数的默认值是512MB。我们使用的是yarn-client模式，所以实际内存是512MB。&lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;384MB是spark-client为appMaster额外申请的内存&lt;/font&gt;，计算方法如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;即，默认从参数读取（集群模式从spark.yarn.driver.memoryOverhead参数读，否则从spark.yarn.am.memoryOverhead参数读），若没配此参数，则从AppMaster的内存*一定系数和默认最小overhead中取较大值。&lt;/p&gt;
&lt;p&gt;在spark-1.4.1版本中，MEMORY_OVERHEAD_FACTOR的默认值为0.10（之前是0.07），MEMORY_OVERHEAD_MIN默认为384，我们没有指定spark.yarn.driver.memoryOverhead和spark.yarn.am.memoryOverhead，而amMemory=512M（由spark.yarn.am.memory决定），因此memoryOverhead为max(512*0.10, 384)=384MB。&lt;/p&gt;
&lt;p&gt;Executor的memoryOverhead计算方法与此一样，只是不区分是否集群模式，都默认由spark.yarn.executor.memoryOverhead配置。&lt;/p&gt;
&lt;p&gt;(2) &lt;font color=&quot;red&quot;&gt;日志和sparkUI上显示的是executor内部用于缓存计算结果的内存空间，并不是executor所拥有的全部内存&lt;/font&gt;。这部分内存是由以下公式计算：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Runtime.getRuntime.maxMemory按2048MB算，storage memory大小为1105.92MB，sparkUI显示的略小于此值，是正常的。&lt;/p&gt;
&lt;p&gt;(3) 与上述第2点一样，storage memory的大小略小于1024&lt;em&gt;0.9&lt;/em&gt;0.6=552.96MB&lt;/p&gt;
&lt;p&gt;(4) 前面提到spark会为container额外申请一部分内存（memoryOverhead），因此，实际为container提交申请的内存大小是2048 + max(2048*0.10, 384) = 2432MB，而&lt;font color=&quot;red&quot;&gt;yarn在做资源分配时会做资源规整化，即应用程序申请的资源量一定是最小可申请资源量的整数倍（向上取整）&lt;/font&gt;，最小可申请内存量由yarn.scheduler.minimum-allocation-mb指定，因此，会为container分配3G内存。&lt;/p&gt;
&lt;h2 id=&quot;验证&quot;&gt;&lt;a href=&quot;#验证&quot; class=&quot;headerlink&quot; title=&quot;验证&quot;&gt;&lt;/a&gt;验证&lt;/h2&gt;&lt;p&gt;为了验证上述规则，继续修改配置参数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPARK_EXECUTOR_INSTANCES=4          &lt;em&gt;在yarn集群中启动的executor进程数&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SPARK_EXECUTOR_MEMORY=4G            &lt;em&gt;为每个executor进程分配的内存大小&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SPARK_DRIVER_MEMORY=3G              &lt;em&gt;为spark-driver进程分配的内存大小&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;并在启动spark-sql时指定spark.yarn.am.memory参数：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bin/spark-sql –master yarn –conf spark.yarn.am.memory=1024m&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;再看日志信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;yarnUI状态：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;sparkUI的executors信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可见，AppMaster的实际内存为1024M（1408-384），而其在yarn中的container内存大小为2G（1408大于1G，yarn按资源规整化原则为其分配2G）。&lt;/p&gt;
&lt;p&gt;同理，driver的storage memory空间为3G*0.9*0.6=1.62G，executor的storage memory空间为4G*0.9*0.6=2.16G，executor所在container占用5G内存（4096+max(4096*0.10,384)= 4505.6，大于4G， yarn按资源规整化原则为其分配5G）。&lt;/p&gt;
&lt;p&gt;Yarn集群的内存总占用空间为2+5*4=22G。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;在测试spark on yarn时，发现一些内存分配上的问题，具体如下。&lt;/p&gt;
&lt;p&gt;在$SPARK_HOME/conf/spark-env.sh中配置如下参数：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SPARK_EXECUTOR_INSTANCES=4            &lt;em&gt;在yarn集群中启动的executor进程数&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SPARK_EXECUTOR_MEMORY=2G              &lt;em&gt;为每个executor进程分配的内存大小&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SPARK_DRIVER_MEMORY=1G                &lt;em&gt;为spark-driver进程分配的内存大小&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;执行$SPARK_HOME/bin/spark-sql –master yarn，按yarn-client模式启动spark-sql交互命令行（即driver程序运行在本地，而非yarn的container中），日志显示的关于AppMaster和Executor的内存信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;日志显示，AppMaster的内存是896MB，其中包含了384MB的memoryOverhead；启动了5个executor，第一个的可用内存是530.3MB，其余每个Executor的可用内存是1060.3MB。&lt;/p&gt;
&lt;p&gt;到yarnUI看下资源使用情况，共启动了5个container，占用内存13G，其中一台NodeManager启动了2个container，占用内存4G（1个AppMaster占1G、另一个占3G），另外3台各启了1个container，每个占用3G内存。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;再到sparkUI看下executors的情况，这里有5个executor，其中driver是运行在执行spark-sql命令的本地服务器上，另外4个是运行在yarn集群中。Driver的可用storage memory为530.3MB，另外4个都是1060.3MB（与日志信息一致）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150813/sparkonyarn-4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;那么问题来了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Yarn为container分配的最小内存由yarn.scheduler.minimum-allocation-mb参数决定，默认是1G，从yarnUI中看确实如此，可为何spark的日志里显示AppMaster的实际内存是896-384=512MB呢？384MB是怎么算出来的？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;spark配置文件里指定了每个executor的内存为2G，为何日志和sparkUI上显示的是1060.3MB？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;driver的内存配置为1G，为何sparkUI里显示的是530.3MB呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为何yarn中每个container分配的内存是3G，而不是executor需要的2G呢？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;问题解析&quot;&gt;&lt;a href=&quot;#问题解析&quot; class=&quot;headerlink&quot; title=&quot;问题解析&quot;&gt;&lt;/a&gt;问题解析&lt;/h2&gt;&lt;p&gt;进过一番调研，发现这里有些概念容易混淆，整理如下，序号对应上面的问题：&lt;br&gt;
    
    </summary>
    
      <category term="Spark" scheme="http://maohong.tech/categories/Spark/"/>
    
    
      <category term="yarn" scheme="http://maohong.tech/tags/yarn/"/>
    
      <category term="spark" scheme="http://maohong.tech/tags/spark/"/>
    
      <category term="内存分配" scheme="http://maohong.tech/tags/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>storm集群supervisor节点异常退出问题排查</title>
    <link href="http://maohong.tech/2015/07/03/storm%E9%9B%86%E7%BE%A4supervisor%E8%8A%82%E7%82%B9%E5%BC%82%E5%B8%B8%E9%80%80%E5%87%BA%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"/>
    <id>http://maohong.tech/2015/07/03/storm集群supervisor节点异常退出问题排查/</id>
    <published>2015-07-03T12:48:50.000Z</published>
    <updated>2017-01-23T03:15:47.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题出现&quot;&gt;&lt;a href=&quot;#问题出现&quot; class=&quot;headerlink&quot; title=&quot;问题出现&quot;&gt;&lt;/a&gt;问题出现&lt;/h2&gt;&lt;p&gt;测试storm集群为0.9.4版本，前段时间出现supervisor进程挂掉，而其上work进程仍然运行的诡异情况，通过日志看到supervisor进程挂掉之前出现以下异常：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;问题排查过程&quot;&gt;&lt;a href=&quot;#问题排查过程&quot; class=&quot;headerlink&quot; title=&quot;问题排查过程&quot;&gt;&lt;/a&gt;问题排查过程&lt;/h2&gt;&lt;p&gt;很明显，是commons-io包的FileUtils工具类抛出的异常，原因是在调用commons-io包的FileUtils工具类做move directory操作时，目的文件夹已存在。&lt;/p&gt;
&lt;p&gt;查看调用代码（supervisor.clj的第374行），是调用download-storm-code方法从nimbus下载topology的代码，并且download-storm-code方法中做代码下载前加了锁避免并发写文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;果然，这里没有判断stormroot文件夹是否已存在，是个bug，具体可见这个issue：&lt;a href=&quot;https://issues.apache.org/jira/browse/STORM-805&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://issues.apache.org/jira/browse/STORM-805&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这个问题在0.9.5版本中随着STORM-130一起修复了，代码如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;但这里有三个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在调用download-storm-code方法前，代码中已做判断是否已下载topology代码，若已下载就不会调用download-storm-code方法了。为何进入这个方法后，做move directory操作时，代码却已经下载好了呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;storm的历史发布版本有很多，为何0.9.4版本里会出现这个不该出现的问题，0.9.4相对老的版本是不是做了什么修改？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为何抛出异常后，supervisor进程就这么直接退出了？太弱了吧。。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;继续看0.9.4的源码发现，&lt;strong&gt;supervisor中有以下两个事件线程，都会调用download-storm-code方法&lt;/strong&gt;：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一个是synchronize-supervisor，用于同步nimbus任务&lt;/strong&gt;，每隔10秒执行一次，会调用mk-synchronize-supervisor方法，以及时获取nimbus分配给该supervisor的新任务并移除已分配但不再需要执行的任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另一个是sync-processes，用于根据任务变化同步管理worker进程&lt;/strong&gt;，执行周期由SUPERVISOR-MONITOR-FREQUENCY-SECS（默认3秒）指定，会调用sync-processes方法，以关闭当前不处于valid状态的worker和启动新分配给该supervisor的worker。&lt;/p&gt;
&lt;p&gt;其中，mk-synchronize-supervisor方法和sync-processes方法都会调用download-storm-code方法。&lt;/p&gt;
&lt;p&gt;两个事件线程的定义：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;mk-synchronize-supervisor方法调用download-storm-code方法：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;sync-processes调用download-storm-code方法：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;mk-synchronize-supervisor方法和sync-processes方法在调用前都会判断topology代码是否已下载，所以，出现上述异常的原因很可能是两个线程再调用download-storm-code方法时不同步引起的，即同时判断到需要下载topology代码并进入了download-storm-code方法，从而产生两次move directory的操作引发异常。&lt;/p&gt;
&lt;p&gt;虽然download-storm-code方法内部通过加锁控制了写文件时的并发，但对进入download-storm-code方法并没有做好同步。&lt;/p&gt;
&lt;p&gt;再回过头看0.9.5版本的代码，虽然在move directory前判断了目的文件夹是否存在以避免问题，但实际上还是存在两个线程同时进入download-storm-code方法的问题。&lt;/p&gt;
&lt;p&gt;最后再比较了下0.9.3和0.9.4的代码（supervisor.clj），发现0.9.4的sync-processes方法中调用download-storm-code的逻辑是新加进去的，也就是说这个bug是0.9.4新引入的，以前的版本不会存在这个问题。&lt;/p&gt;
&lt;p&gt;左边为0.9.3，右边为0.9.4：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于第3个问题，再回看定义synchronize-supervisor事件线程的代码，是通过事件管理器event-manager来实现的，查看event.clj中的实现，event-manager会从一个LinkedBlockingQueue取出新事件并启动线程处理，线程若抛出非Interrupted异常，则直接退出进程了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;至此，问题分析完毕。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题出现&quot;&gt;&lt;a href=&quot;#问题出现&quot; class=&quot;headerlink&quot; title=&quot;问题出现&quot;&gt;&lt;/a&gt;问题出现&lt;/h2&gt;&lt;p&gt;测试storm集群为0.9.4版本，前段时间出现supervisor进程挂掉，而其上work进程仍然运行的诡异情况，通过日志看到supervisor进程挂掉之前出现以下异常：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;问题排查过程&quot;&gt;&lt;a href=&quot;#问题排查过程&quot; class=&quot;headerlink&quot; title=&quot;问题排查过程&quot;&gt;&lt;/a&gt;问题排查过程&lt;/h2&gt;&lt;p&gt;很明显，是commons-io包的FileUtils工具类抛出的异常，原因是在调用commons-io包的FileUtils工具类做move directory操作时，目的文件夹已存在。&lt;/p&gt;
&lt;p&gt;查看调用代码（supervisor.clj的第374行），是调用download-storm-code方法从nimbus下载topology的代码，并且download-storm-code方法中做代码下载前加了锁避免并发写文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;果然，这里没有判断stormroot文件夹是否已存在，是个bug，具体可见这个issue：&lt;a href=&quot;https://issues.apache.org/jira/browse/STORM-805&quot;&gt;https://issues.apache.org/jira/browse/STORM-805&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这个问题在0.9.5版本中随着STORM-130一起修复了，代码如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150701/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;但这里有三个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在调用download-storm-code方法前，代码中已做判断是否已下载topology代码，若已下载就不会调用download-storm-code方法了。为何进入这个方法后，做move directory操作时，代码却已经下载好了呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;storm的历史发布版本有很多，为何0.9.4版本里会出现这个不该出现的问题，0.9.4相对老的版本是不是做了什么修改？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为何抛出异常后，supervisor进程就这么直接退出了？太弱了吧。。&lt;/p&gt;
    
    </summary>
    
      <category term="Storm" scheme="http://maohong.tech/categories/Storm/"/>
    
    
      <category term="storm" scheme="http://maohong.tech/tags/storm/"/>
    
      <category term="supervisor" scheme="http://maohong.tech/tags/supervisor/"/>
    
      <category term="异常排查" scheme="http://maohong.tech/tags/%E5%BC%82%E5%B8%B8%E6%8E%92%E6%9F%A5/"/>
    
  </entry>
  
  <entry>
    <title>交换空间使用率过高问题分析</title>
    <link href="http://maohong.tech/2015/06/22/%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    <id>http://maohong.tech/2015/06/22/交换空间使用率过高问题分析/</id>
    <published>2015-06-22T02:02:04.000Z</published>
    <updated>2017-01-23T03:16:22.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h2&gt;&lt;p&gt;线上两台java后台服务每次上线后再过段时间，就出现swap空间使用率较高的现象，而jvm内存使用和垃圾回收情况则很正常。相关图表如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;图中，每次上线后过一段时间，swap空间使用量会出现一个陡增，并随时间推移逐渐增加，期间会出现小幅度下降。&lt;/p&gt;
&lt;p&gt;首先，从操作系统层面分析，swap空间使用较高，说明是系统物理内存不够用从而发生内存页交换，将部分内存数据搬至虚拟内存空间，也就是swap空间。但究竟是什么原因引起物理内存不足呢？因为Jvm堆大小是固定的，所以推断是因堆外内存占用空间较大引起。&lt;/p&gt;
&lt;p&gt;于是，使用jmap -histo:live &lt;pid&gt;把进程中的对象信息dump出来，dump信息如下：&lt;/pid&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;确实发现存在大量DirectByteBuffer对象，这说明内存中确实有大量引用了堆外内存的对象没有被回收！&lt;/p&gt;
&lt;p&gt;同时，内存中也对应存在着大量的sun.misc.Cleaner和java.nio.DirectByteBuffer$Deallocator对象。这两个类是用于回收堆外内存的。Cleaner对象是在DirectByteBuffer的构造函数中创建，其中封装了回收堆外内存的逻辑，Cleaner执行clean资源的操作是通过启动Deallocator线程实现的，这个线程把DirectByteBuffer对象引用的堆外内存做回收。&lt;/p&gt;
&lt;p&gt; 那么问题来了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为什么DirectByteBuffer对象没有被回收？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怎么做才能让DirectByteBuffer对象能被及时回收？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;先看了下启动jvm参数为-Xmn8192M -Xms13312M -Xmx13312M -XX:PermSize=512m -XX:MaxPermSize=512m，很明显，新生代空间配的太大，同时，也没有指定堆外内存的最大空间（-XX:MaxDirectMemorySize），这个参数没设置则默认等于-Xmx，然而服务器总内存只有16G，所以时间长了很可能会发生堆外内存溢出！&lt;/p&gt;
&lt;p&gt;因为此服务是kafka集群的消费者，每天接收的报文量在1亿以上，这个过程中产生了大量的DirectByteBuffer对象，这些对象直接引用堆外内存，而同时，这些临时对象也会被回收，由于新生代空间配的很大，触发minor GC的频率不够高，从而不能及时释放已被占用的堆外内存，随着时间的推移，进程启动过一段时间后，堆外内存占用越来越多，最终被OS交换到swap空间。&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;p&gt;调整jvm参数，减少新生代大小为jvm堆空间的3/8，并指定堆外内存大小，调整后的jvm参数为-Xmn3840M -Xms10240M -Xmx10240M -XX:PermSize=512m -XX:MaxPermSize=512m -XX:MaxDirectMemorySize=4096m&lt;/p&gt;
&lt;p&gt;调整后，swap空间占用情况有所好转，但依然占用2G左右！如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4月21日调整参数重启服务后，在相当长的一段时间内，swap空间占用率极低，但在5月2日又出现swap空间使用率上升的情况。继续看了下jvm堆空间使用情况和full gc情况，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;结合上面两张图，可见young gc较多，jvm堆空间整体使用率稳步上升，在5月2日与5月8日发生了两次full gc，并且每次发生fullgc后，jvm堆空间使用率下降较多，swap空间使用量只有小范围下降。这说明有一部分DirectByteBuffer对象在fullgc阶段做了回收，但依然有很多DirectByteBuffer对象没有被回收，仍然占用着堆外内存。&lt;/p&gt;
&lt;p&gt;选择一台机器，继续减小其堆空间，jvm参数为-Xmn2048M -Xms6144M -Xmx6144M -XX:PermSize=512m -XX:MaxPermSize=512m -XX:MaxDirectMemorySize=4096m，经过一段时间观察，交换空间使用率很低，应该没再发生内存页交换了，同时gc频率变高，jvm堆空间的使用率在正常范围，说明DirectByteBuffer对象被更及时的回收了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;由此可见，swap空间占用率高的原因主要还是JVM堆空间太高导致的堆外内存回收不及时。&lt;/font&gt;

&lt;h2 id=&quot;遗留问题&quot;&gt;&lt;a href=&quot;#遗留问题&quot; class=&quot;headerlink&quot; title=&quot;遗留问题&quot;&gt;&lt;/a&gt;遗留问题&lt;/h2&gt;&lt;p&gt;看了下kafka-client的源码，接受消息时使用的是ByteBuffer，并没有使用DirectByteBuffer，所以很奇怪，这些大量的DirectByteBuffer对象是从哪生成的？哪里用到的？&lt;/p&gt;
&lt;p&gt;运行命令jmap -dump:live,format=b,file=/data/server.dump &lt;pid&gt;，dump出内存快照，并用eclipse mat分析后，发现是zkclient中的一个地方用的，由于dump出的这个快照是问题解决后的内存快照，所以并不能说明问题，如果要找到根本原因，还是需要复现swap空间过高的场景，再做内存快照的dump。&lt;/pid&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h2&gt;&lt;p&gt;线上两台java后台服务每次上线后再过段时间，就出现swap空间使用率较高的现象，而jvm内存使用和垃圾回收情况则很正常。相关图表如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;图中，每次上线后过一段时间，swap空间使用量会出现一个陡增，并随时间推移逐渐增加，期间会出现小幅度下降。&lt;/p&gt;
&lt;p&gt;首先，从操作系统层面分析，swap空间使用较高，说明是系统物理内存不够用从而发生内存页交换，将部分内存数据搬至虚拟内存空间，也就是swap空间。但究竟是什么原因引起物理内存不足呢？因为Jvm堆大小是固定的，所以推断是因堆外内存占用空间较大引起。&lt;/p&gt;
&lt;p&gt;于是，使用jmap -histo:live &lt;pid&gt;把进程中的对象信息dump出来，dump信息如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150622%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4%E4%BD%BF%E7%94%A8%E7%8E%87%E8%BF%87%E9%AB%98%E9%97%AE%E9%A2%98/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;确实发现存在大量DirectByteBuffer对象，这说明内存中确实有大量引用了堆外内存的对象没有被回收！&lt;/p&gt;
&lt;p&gt;同时，内存中也对应存在着大量的sun.misc.Cleaner和java.nio.DirectByteBuffer$Deallocator对象。这两个类是用于回收堆外内存的。Cleaner对象是在DirectByteBuffer的构造函数中创建，其中封装了回收堆外内存的逻辑，Cleaner执行clean资源的操作是通过启动Deallocator线程实现的，这个线程把DirectByteBuffer对象引用的堆外内存做回收。&lt;/p&gt;
&lt;p&gt; 那么问题来了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为什么DirectByteBuffer对象没有被回收？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;怎么做才能让DirectByteBuffer对象能被及时回收？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;
    
    </summary>
    
      <category term="问题分析" scheme="http://maohong.tech/categories/%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
    
      <category term="swap分区" scheme="http://maohong.tech/tags/swap%E5%88%86%E5%8C%BA/"/>
    
      <category term="问题分析" scheme="http://maohong.tech/tags/%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
      <category term="jvm调优" scheme="http://maohong.tech/tags/jvm%E8%B0%83%E4%BC%98/"/>
    
  </entry>
  
  <entry>
    <title>hadoop-yarn中ResourceManager的服务模块</title>
    <link href="http://maohong.tech/2015/06/06/hadoop-yarn%E4%B8%ADResourceManager%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97/"/>
    <id>http://maohong.tech/2015/06/06/hadoop-yarn中ResourceManager的服务模块/</id>
    <published>2015-06-06T05:10:10.000Z</published>
    <updated>2016-07-09T13:07:22.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Yarn简述&quot;&gt;&lt;a href=&quot;#Yarn简述&quot; class=&quot;headerlink&quot; title=&quot;Yarn简述&quot;&gt;&lt;/a&gt;Yarn简述&lt;/h2&gt;&lt;p&gt;Hadoop2.0引入了yarn（Yet Another Resource Negotiator）资源管理框架。1.0中的MapReduce计算框架变为运行在yarn上的一种application。&lt;/p&gt;
&lt;p&gt;Yarn依然采用了master/slave结构，master是ResourceManager，负责整个集群的资源管理和调度，并且支持HA，slave是NodeManager，负责管理各子节点上的资源和任务。每个MapReduce作业提交给ResourceManager并被接受后，ResourceManager会通知某个NodeManager启动一个ApplicationMaster管理此作业的生命周期。&lt;/p&gt;
&lt;h2 id=&quot;ResourceManager中的模块划分&quot;&gt;&lt;a href=&quot;#ResourceManager中的模块划分&quot; class=&quot;headerlink&quot; title=&quot;ResourceManager中的模块划分&quot;&gt;&lt;/a&gt;ResourceManager中的模块划分&lt;/h2&gt;&lt;p&gt;Yarn中的大多数服务都是带状态的service实现，并通过事件驱动机制实现服务的状态转换和服务之间的交互。ResourceManager是yarn的核心组件，与NodeManager、ApplicationMaster、Client都有交互，提供了非常多的功能，下面基于hadoop2.7版本的实现，梳理一下ResourceManager中的重要service组件及其功能。&lt;/p&gt;
&lt;p&gt;ResourceManager中按功能划分的service模块如下图所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150606ResourceManager%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ResourceManager中核心模块主要包括客户端交互模块、NodeManager管理模块、ApplicationMaster管理模块、Application管理模块、安全管理模块、以及资源管理模块（调度、预留）等。&lt;/p&gt;
&lt;h2 id=&quot;各模块中的服务介绍&quot;&gt;&lt;a href=&quot;#各模块中的服务介绍&quot; class=&quot;headerlink&quot; title=&quot;各模块中的服务介绍&quot;&gt;&lt;/a&gt;各模块中的服务介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;客户端交互模块：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AdminService&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;管理员可通过此接口管理集群，如更新节点、更新ACL、更新队列等。内部有个EmbeddedElectorService，如果RM启用了自动HA，则通过这个service做leader election。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ClientRMService&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责为客户端提供服务，是ApplicationClientProtocol协议的服务端。负责处理来自客户端的RPC请求，包括提交app、查询app运行状态、终止app等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Webapp&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提供web页面服务，展示集群状态和资源使用情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;NodeManager管理模块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NMLivelinessMonitor&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于监控NM是否存活，若NM在一定时间内（默认10分钟）未上报心跳，则认为其挂了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NodesListManager&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责维护节点列表，并动态加载白名单（yarn.resourcemanager.nodes.include-path）和黑名单（yarn.resourcemanager.nodes.exlude-path）节点。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RMNodeLabelsManager&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责节点的标签管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ResourceTrackerService&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责与NodeManager通信，处理来自NodeManager的请求，包括注册NodeManager和节点心跳两种。接口定义在ResourceTracker中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ApplicationMaster管理模块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AMLivelinessMonitor：两个实例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于监控ApplicationMaster是否正常，如果在指定时间内（默认10分钟）未收到AM的心跳，则认为其死掉了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ApplicationMasterLauncher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责通知某个NodeManager启动或销毁ApplicationMaster。在app请求被接受后，与某个NodeManager通信，告知其为此app启动相应的ApplicationMaster。若app运行结束或被kill，则通知app所在NodeManager销毁ApplicationMaster。其内部也维护了一个阻塞队列，并有一个后台线程异步处理提交进来的启动ApplicationMaster的请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ApplicationMasterService&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责与ApplicationMaster通信，是ApplicationMasterProtocol协议的服务端，ApplicationMaster在NodeManager上启动后通过此协议向ResourceManager注册自己，运行过程中向ResourceManager发送心跳，以及app运行结束后告知RM自己所在的container可以被释放了。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Application管理模块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;RMAppManager&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ResourceManager接受客户端提交的app后，会通过RMAppManager来触发启动app的事件RMAppEventType.START，具体启动app的工作由RMAppImpl实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ApplicationACLsManager&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责app权限控制，包括查看和修改权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ContainerAllocationExpirer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于监听NodeManager上是否正常启动了分配给ApplicationMaster的container，若在指定时间未启动（默认10分钟），ResourceManager会强制回收该container。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RMApplicationHistoryWriter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;负责异步持久化Application运行中的相关日志，主要是Container、Application、ApplicationAttempt在启动和结束时的日志信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;安全管理模块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RMSecretManagerService&lt;ul&gt;
&lt;li&gt;负责管理各种通信密钥，包括：&lt;ul&gt;
&lt;li&gt;RM与NM通信的NMTokenSecretManagerInRM&lt;/li&gt;
&lt;li&gt;RM与container通信的RMContainerTokenSecretManager&lt;/li&gt;
&lt;li&gt;客户端与AM通信的ClientToAMTokenSecretManagerInRM&lt;/li&gt;
&lt;li&gt;AM与RM通信的AMRMTokenSecretManager&lt;/li&gt;
&lt;li&gt;DelegationTokenRenewer&lt;/li&gt;
&lt;li&gt;启用了安全时，负责定时更新认证token。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;资源管理模块&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ResourceScheduler&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源调度器，可通过yarn.resourcemanager.scheduler.class指定，ResourceManager默认使用的是org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SchedulerEventDispatcher&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用于处理SchedulerEventType类型的事件，其内部维护了一个存储SchedulerEvent的阻塞队列，并由一个后台线程从队列中取出资源请求事件，再调用ResourceScheduler进行处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ReservationSystem&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;资源预留系统，对应的实现有CapacityReservationSystem和FairReservationSystem。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，SystemMetricsPublisher负责发布RM的系统统计信息。AsyncDispatcher是中央事件处理分发器，ResourceManager启动时，通过它绑定了几种类型的事件的处理器，包括SchedulerEventType、RMAppEventType、ApplicationAttempt、RMAppAttemptEventType、RMNodeEventType、RMAppManagerEventType、AMLaunchEventType等。&lt;/p&gt;
&lt;p&gt;上述各service在ResourceManager中的启动顺序为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;AsyncDispatcher&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AdminService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RMActiveServices：是个CompositeService（即service列表，ResourceManager本身就是一个CompositeService），用于管理ResourceManager中的“活动”服务（必须在active的ResourceManager上启动的服务，启用HA时，备份ResourceManager上不启动这些服务），包括以下（按启动顺序）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;RMSecretManagerService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ContainerAllocationExpirer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AMLivelinessMonitor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RMNodeLabelsManager&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;RMApplicationHistoryWriter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SystemMetricsPublisher&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NodesListManager&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ResourceScheduler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SchedulerEventDispatcher&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NMLivelinessMonitor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ResourceTrackerService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ApplicationMasterService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ClientRMService&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ApplicationMasterLauncher&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DelegationTokenRenewer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Yarn简述&quot;&gt;&lt;a href=&quot;#Yarn简述&quot; class=&quot;headerlink&quot; title=&quot;Yarn简述&quot;&gt;&lt;/a&gt;Yarn简述&lt;/h2&gt;&lt;p&gt;Hadoop2.0引入了yarn（Yet Another Resource Negotiator）资源管理框
    
    </summary>
    
      <category term="Hadoop" scheme="http://maohong.tech/categories/Hadoop/"/>
    
    
      <category term="hadoop" scheme="http://maohong.tech/tags/hadoop/"/>
    
      <category term="yarn" scheme="http://maohong.tech/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>mac系统下hadoop-2.7源码编译、导入eclipse及打包</title>
    <link href="http://maohong.tech/2015/05/18/mac%E7%B3%BB%E7%BB%9F%E4%B8%8Bhadoop-2-7%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E3%80%81%E5%AF%BC%E5%85%A5eclipse%E5%8F%8A%E6%89%93%E5%8C%85/"/>
    <id>http://maohong.tech/2015/05/18/mac系统下hadoop-2-7源码编译、导入eclipse及打包/</id>
    <published>2015-05-18T02:00:44.000Z</published>
    <updated>2016-07-09T13:07:36.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;编译环境要求&quot;&gt;&lt;a href=&quot;#编译环境要求&quot; class=&quot;headerlink&quot; title=&quot;编译环境要求&quot;&gt;&lt;/a&gt;编译环境要求&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;JDK1.7+&lt;br&gt;MAVEN 3.0以上版本&lt;br&gt;如果需要编译native code，还需要CMake 2.6、Zlib devel、openssl devel（mac下一般安装了xcode后应该都会有这些包）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;编译方法&quot;&gt;&lt;a href=&quot;#编译方法&quot; class=&quot;headerlink&quot; title=&quot;编译方法&quot;&gt;&lt;/a&gt;编译方法&lt;/h2&gt;&lt;p&gt;解压源码包hadoop-2.7.0-src.tar.gz，iterm下进入文件夹hadoop-2.7.0-src，然后根据需要执行相应的mvn命令就可以了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仅编译：mvn compile&lt;br&gt;打包生成jar：mvn package&lt;br&gt;生成eclipse项目：eclipse:eclipse -DskipTests，加上-DskipTests可跳过test阶段。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;期间遇到几个问题，记录如下。&lt;/p&gt;
&lt;h2 id=&quot;问题记录&quot;&gt;&lt;a href=&quot;#问题记录&quot; class=&quot;headerlink&quot; title=&quot;问题记录&quot;&gt;&lt;/a&gt;问题记录&lt;/h2&gt;&lt;p&gt;先执行mvn eclipse:eclipse -DskipTest生成eclipse项目，执行到一半时，提示下面的报错：&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;‘protoc –version’ did not return a version -&amp;gt; [Help 1]&lt;/font&gt;

&lt;p&gt;意思也就是是找不到protoc命令，安装protocolbuffer后重试，又提示错误：&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;protoc version is ‘libprotoc 2.6.1′, expected version is ’2.5.0′&lt;/font&gt;

&lt;p&gt;看上去是protocolbuffer版本问题，hadoop需要的版本是2.5.0，而系统安装的是2.6.1，查了很多资料，都是说protocolbuffer版本太低后来升到2.5的，而我这是2.6.1的版本，难不成还得降回去，不至于吧。因此，猜测这个版本限制是在pom.xml中写死的，于是grep了一下，发现果然在hadoop-project/pom.xml中配置了编译时使用的pb版本。&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;\&lt;protobuf.version&gt;2.5.0\&lt;/protobuf.version&gt;&lt;/font&gt;

&lt;p&gt;把以上配置项改为2.6.1，再重新执行生成eclipse项目的命令就OK了。&lt;/p&gt;
&lt;h2 id=&quot;导入eclipse及打包&quot;&gt;&lt;a href=&quot;#导入eclipse及打包&quot; class=&quot;headerlink&quot; title=&quot;导入eclipse及打包&quot;&gt;&lt;/a&gt;导入eclipse及打包&lt;/h2&gt;&lt;p&gt;生成eclipse项目后，从eclipse里import existing project into workspace，选择hadoop-2.7.0-src目录，就会把所有代码模块导入eclipse了。接下来就可以看代码并修改了，比如增加一些日志信息等。&lt;/p&gt;
&lt;p&gt;代码修改完毕后，可以再打出一个新的hadoop-distribution包来验证代码修改效果。&lt;/p&gt;
&lt;p&gt;在hadoop-2.7.0-src目录下执行命令：&lt;font color=&quot;red&quot;&gt;mvn package -Pdist -Ptar -Pdocs -skipTests &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;等上漫长的一段时间，编译成功后，可以到hadoop-dist/target下找到新的jar包。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20150518-hadoop%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;补充说明&quot;&gt;&lt;a href=&quot;#补充说明&quot; class=&quot;headerlink&quot; title=&quot;补充说明&quot;&gt;&lt;/a&gt;补充说明&lt;/h2&gt;&lt;p&gt;编译过程需要从maven中央仓库下载大量依赖包，我使用的是oschina的库。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;mirror&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;id&amp;gt;CN&amp;lt;/id&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;name&amp;gt;OSChina Central&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;url&amp;gt;http://maven.oschina.net/content/groups/public/&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/mirror&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;profile&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;id&amp;gt;oschina&amp;lt;/id&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;repositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;lt;repository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;name&amp;gt;local private nexus&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;url&amp;gt;http://maven.oschina.net/content/groups/public/&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;releases&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;/releases&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;/snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;lt;/repository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;/repositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;pluginRepositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;lt;pluginRepository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;id&amp;gt;nexus&amp;lt;/id&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;name&amp;gt;local private nexus&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;url&amp;gt;http://maven.oschina.net/content/groups/public/&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;releases&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;/releases&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;lt;/snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;lt;/pluginRepository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;/pluginRepositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/profile&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;编译环境要求&quot;&gt;&lt;a href=&quot;#编译环境要求&quot; class=&quot;headerlink&quot; title=&quot;编译环境要求&quot;&gt;&lt;/a&gt;编译环境要求&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;JDK1.7+&lt;br&gt;MAVEN 3.0以上版本&lt;br&gt;如果需要编译native 
    
    </summary>
    
      <category term="Hadoop" scheme="http://maohong.tech/categories/Hadoop/"/>
    
    
      <category term="hadoop" scheme="http://maohong.tech/tags/hadoop/"/>
    
      <category term="eclipse" scheme="http://maohong.tech/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo+gitpage搭建博客</title>
    <link href="http://maohong.tech/2014/09/02/%E4%BD%BF%E7%94%A8hexo-gitpage%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://maohong.tech/2014/09/02/使用hexo-gitpage搭建博客/</id>
    <published>2014-09-02T11:50:40.000Z</published>
    <updated>2016-07-03T13:31:31.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;p&gt;系统：mac osx&lt;br&gt;软件：Node.js，npm，git，hexo&lt;br&gt;具体安装以及git与github打通的配置就不详述了，可以google到各种方法。  &lt;/p&gt;
&lt;h2 id=&quot;hexo命令&quot;&gt;&lt;a href=&quot;#hexo命令&quot; class=&quot;headerlink&quot; title=&quot;hexo命令&quot;&gt;&lt;/a&gt;hexo命令&lt;/h2&gt;&lt;p&gt;hexo init &amp;lt;folder&amp;gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; #表示执行init命令初始化hexo到你指定的目录  &lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;以下命令需要在&amp;lt;folder&amp;gt;目录下执行：&lt;/font&gt;&lt;br&gt;hexo generate  &amp;nbsp;&amp;nbsp;&amp;nbsp;#自动根据当前目录下文件,生成静态网页&lt;br&gt;hexo server &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#运行本地服务  &lt;/p&gt;
&lt;p&gt;启动服务后，就可以通过访问 &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt; 来看看效果了。&lt;br&gt;接下来，可以使用以下命令来创建一篇新博文：&lt;br&gt;hexo new “test blog 1”&lt;br&gt;创建一个名为test blog 1的博客页面，对应的md文件路径是&amp;lt;folder&amp;gt;/source/_posts\test blog 1.md  &lt;/p&gt;
&lt;p&gt;接下来就可以在这个md文件中写文章了，我使用的是MacDown来编辑md文件，支持实时查看页面效果，还是挺好用的。&lt;/p&gt;
&lt;h2 id=&quot;发布博客&quot;&gt;&lt;a href=&quot;#发布博客&quot; class=&quot;headerlink&quot; title=&quot;发布博客&quot;&gt;&lt;/a&gt;发布博客&lt;/h2&gt;&lt;p&gt;文章写好后，通过以下方式发布到github上。&lt;br&gt;1.编辑./_config.yml文件，修改以下部分，配置本地内容同步至github：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; deploy:&lt;br&gt; &amp;nbsp;&amp;nbsp;type: git&lt;br&gt; &amp;nbsp;&amp;nbsp;repository: git@github.com:maohong/maohong.github.io.git&lt;br&gt; &amp;nbsp;&amp;nbsp;branch: master  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.执行hexo generate(hexo g)生成html内容&lt;br&gt;3.执行hexo deploy(hexo d)讲更新内容发布至guthub  &lt;/p&gt;
&lt;p&gt;然后就可以访问主页查看效果了，可以使用github帐户名.github.io进行访问, 也可以设置个性域名。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境准备&quot;&gt;&lt;a href=&quot;#环境准备&quot; class=&quot;headerlink&quot; title=&quot;环境准备&quot;&gt;&lt;/a&gt;环境准备&lt;/h2&gt;&lt;p&gt;系统：mac osx&lt;br&gt;软件：Node.js，npm，git，hexo&lt;br&gt;具体安装以及git与github打通的配置
    
    </summary>
    
      <category term="工具" scheme="http://maohong.tech/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="hexo" scheme="http://maohong.tech/tags/hexo/"/>
    
      <category term="gitpage" scheme="http://maohong.tech/tags/gitpage/"/>
    
  </entry>
  
  <entry>
    <title>redis服务端连接断开问题诊断</title>
    <link href="http://maohong.tech/2014/06/01/redis%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%BF%9E%E6%8E%A5%E6%96%AD%E5%BC%80%E9%97%AE%E9%A2%98%E8%AF%8A%E6%96%AD/"/>
    <id>http://maohong.tech/2014/06/01/redis服务端连接断开问题诊断/</id>
    <published>2014-06-01T13:29:28.000Z</published>
    <updated>2016-07-09T08:39:51.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h2&gt;&lt;p&gt;前段时间，由于线上redis服务器的内存使用率达到了机器总内存的50%以上，导致内存数据的dump持久化一直失败。扩展到多台redis后，应用系统访问redis时，在业务量较少时，时不时会出现以下异常，当业务量较大，redis访问频率很高时，却不会发生这个异常，一时觉得很诡异。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;redis.clients.jedis.exceptions.JedisConnectionException: It seems like server has closed the connection.&lt;br&gt;at redis.clients.util.RedisInputStream.readLine(RedisInputStream.java:90) ~[jedis-2.1.0.jar:na]&lt;br&gt;at redis.clients.jedis.Protocol.processInteger(Protocol.java:110) ~[jedis-2.1.0.jar:na]&lt;br&gt;at redis.clients.jedis.Protocol.process(Protocol.java:70) ~[jedis-2.1.0.jar:na]&lt;br&gt;at redis.clients.jedis.Protocol.read(Protocol.java:131) ~[jedis-2.1.0.jar:na]&lt;br&gt;at redis.clients.jedis.Connection.getIntegerReply(Connection.java:188) ~[jedis-2.1.0.jar:na]&lt;br&gt;at redis.clients.jedis.Jedis.sismember(Jedis.java:1266) ~[jedis-2.1.0.jar:na]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看提示，应该是服务端主动关闭了连接。查看了新上线的redis服务器的配置，有这么一项：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# Close the connection after a client is idle for N seconds (0 to disable)&lt;br&gt;timeout 120&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这项配置指的是客户端连接空闲超过多少秒后，服务端主动关闭连接，默认值0表示服务端永远不主动关闭。而op人员把服务器端的超时时间设置为了120秒。&lt;/p&gt;
&lt;p&gt;这就解释了发生这个异常的原因。客户端使用了一个连接池管理访问redis的所有连接，这些连接是长连接，当业务量较小时，客户端部分连接使用率较低，当两次使用之间的间隔超过120秒时，redis服务端就主动关闭了这个连接，而等客户端下次再使用这个连接对象时，发现服务端已经关闭了连接，进而报错。&lt;/p&gt;
&lt;p&gt;于是，再查看访问redis的系统（客户端）的配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20140601-redis%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;客户端使用的是jedis内置的连接池，看其源码本质上是基于apache commons-pool实现的，其中有一个eviction线程，用于回收idle对象，对于redis连接池来说，也就是回收空闲连接。&lt;/p&gt;
&lt;p&gt;JedisPoolConfig类继承自GenericObjectPoolConfig并覆盖了几项关于eviction线程的配置，具体如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20140601-redis%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;font color=&quot;red&quot;&gt;_timeBetweenEvictionRunsMillis&lt;/font&gt;&lt;/em&gt;：eviction线程的运行周期。默认是-1，表示不启动eviction线程。这里设置为30秒。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;font color=&quot;red&quot;&gt;_minEvictableIdleTimeMillis&lt;/font&gt;&lt;/em&gt;：对象处于idle状态的最长时间，默认是30分钟，这里设置为60秒。&lt;/p&gt;
&lt;p&gt;通过客户端的默认配置看，对象的最大空闲时长是小于服务端的配置的，应该不是配置上的问题了。&lt;/p&gt;
&lt;p&gt;于是，继续看是不是客户端代码使用上的问题。追踪到客户端代码如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20140601-redis%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可见，客户端首先尝试从本线程的ThreadLocal对象中获取jedis对象，若获取不到，再从masterJedisPool中取得jedis对象并放入ThreadLocal对象以便下次使用，并且jedis对象使用完毕后，没有从ThreadLocal中清除，也没有returnResource给masterJedisPool。&lt;/p&gt;
&lt;p&gt;因此，问题产生的原因就在于此。ThreadLocal中的这个jedis对象被取出后没有return，对于对象池来说是处于非idle状态，因此不会被对象池evict。&lt;font color=&quot;red&quot;&gt;当业务量大时，这个jedis会被频繁使用，服务端认为这个jedis对应的连接是非空闲的，或者空闲时间达不到120秒，不会主动关闭，所以没什么问题。然而当业务量小时，这个jedis使用频率很低，当两次之间的使用间隔超出120秒时，服务端会主动把这个jedis的连接关闭，第二次调用时，就会出现上面的报错。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;从代码开发者的角度来说，这么做的目的是避免频繁从pool中获取jedis对象和return jedis对象以提高性能。&lt;/p&gt;
&lt;p&gt;解决方案有两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在redis-cli下在线修改redis 的配置，把timeout改回为0，无需重启redis即可直接生效，但redis若重启，配置会恢复。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改客户端代码，使用完jedis对象后，从ThreadLocal中清除，再返回给连接池。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;出于改动成本考虑，先采用了第一种方案，在线修改redis配置后，报错不再出现。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题现象&quot;&gt;&lt;a href=&quot;#问题现象&quot; class=&quot;headerlink&quot; title=&quot;问题现象&quot;&gt;&lt;/a&gt;问题现象&lt;/h2&gt;&lt;p&gt;前段时间，由于线上redis服务器的内存使用率达到了机器总内存的50%以上，导致内存数据的dump持久化一直失败。扩展到多台
    
    </summary>
    
      <category term="Redis" scheme="http://maohong.tech/categories/Redis/"/>
    
    
      <category term="redis" scheme="http://maohong.tech/tags/redis/"/>
    
      <category term="连接断开" scheme="http://maohong.tech/tags/%E8%BF%9E%E6%8E%A5%E6%96%AD%E5%BC%80/"/>
    
  </entry>
  
  <entry>
    <title>基于zookeeper的分布式独占锁实现</title>
    <link href="http://maohong.tech/2014/05/13/%E5%9F%BA%E4%BA%8Ezookeeper%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%8B%AC%E5%8D%A0%E9%94%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://maohong.tech/2014/05/13/基于zookeeper的分布式独占锁实现/</id>
    <published>2014-05-13T13:05:01.000Z</published>
    <updated>2016-07-04T15:59:00.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在分布式系统中，经常遇到这样一种场景：选举一个节点执行某一个任务，当此节点宕机后，其他节点可以接管并继续执行这个任务。由于各个节点运行的代码是一样的，彼此之间也是平等的，各个节点如何可以知道自己是否可以执行这个任务呢？当有节点宕机时，又如何判断自己是否可以接管任务呢？在我们的分布式任务调度系统中，需要选取调度器集群中的一个节点进行轮询任务状态，这里使用了zookeeper来实现一个统一的分布式锁，从而选出轮询节点。&lt;/p&gt;
&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;如图所示，每台服务器启动后，都在同一目录下建一个临时顺序节点（EPHEMERAL_SEQUENTIAL），并获取此目录下的所有节点信息，如果自己的序号是最小的，就认为获取到了锁，可以执行任务。若自己的节点不是最小的，就认为自己没有获取到锁，不执行任务，同时，在比自己小1个序号的节点上增加监听。当比自己小1个序号的节点发生变化的时候，再次检查自己是否是最小序号的节点，如果是则获取锁，否则继续监听比自己小1个序号的节点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20140502-%E5%9F%BA%E4%BA%8Ezookeeper%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%8B%AC%E5%8D%A0%E9%94%81%E5%AE%9E%E7%8E%B0/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h2&gt;&lt;p&gt;以下是一个demo实现程序：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;154&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;155&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;156&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;157&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;158&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;159&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;160&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;161&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;162&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;163&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;166&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;167&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;168&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;169&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;170&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;171&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;172&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;173&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;174&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;175&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;176&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;177&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;178&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;179&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;180&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;181&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;182&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;183&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;184&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;185&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;186&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;187&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;188&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;189&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;190&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;191&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;192&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;193&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;194&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;195&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;196&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;197&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;198&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;199&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;200&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;201&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;202&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;203&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;204&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;205&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;206&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;207&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;208&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;209&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;210&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;211&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;212&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;213&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;214&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;215&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;216&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;217&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;218&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;219&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;220&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;221&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;222&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;223&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;224&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;225&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;226&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;227&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;228&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;229&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;230&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;231&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;232&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;233&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;234&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;235&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;236&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;237&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;238&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;239&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;240&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;241&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;242&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;243&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;244&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;245&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;246&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;247&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;248&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;249&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;250&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;251&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;252&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;253&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;254&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;255&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;256&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;257&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;258&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;259&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;260&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;261&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;262&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;263&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;264&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;265&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;266&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;267&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;268&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DistributedExclusiveLock&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Watcher&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ZooKeeper zk;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String lockDir = &lt;span class=&quot;string&quot;&gt;&quot;/testlock&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//锁节点所在zk的目录&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String lockSymbol = &lt;span class=&quot;string&quot;&gt;&quot;_lock_&quot;&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//锁节点标志&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String lockName;&lt;span class=&quot;comment&quot;&gt;//锁节点前缀，构造锁时由外部传入&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String waitNodePath;&lt;span class=&quot;comment&quot;&gt;//等待的前一个锁的节点名称&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String myNodePath;&lt;span class=&quot;comment&quot;&gt;//当前锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; CountDownLatch latch;&lt;span class=&quot;comment&quot;&gt;//计数器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String threadId;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 * 创建分布式锁&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; lockName 竞争资源标志,lockName中不能包含单词lock&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; Exception&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DistributedExclusiveLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String zkServers, String lockName)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//简单校验lockDir路径&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!lockDir.startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;LockDir Path must start with / character! lockDir=&quot;&lt;/span&gt; + lockDir);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lockDir.endsWith(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;LockDir Path must not end with / character! lockDir=&quot;&lt;/span&gt; + lockDir);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lockName = lockName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.threadId = getThreadId();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 创建一个与服务器的连接&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			zk = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZooKeeper(zkServers, &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			createLockDirIfNecessary(lockDir);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;Error while initializing DistributedExclusiveLock!&quot;&lt;/span&gt; + e.getMessage(), e);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getThreadId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Thread-&quot;&lt;/span&gt; + Thread.currentThread().getId();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 * 在zk上建立lock目录，如果目录不存在，逐级创建节点&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createLockDirIfNecessary&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String zkDir)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//zkDir是一级节点，如/cloudscheduler&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (zkDir.indexOf(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;) == zkDir.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Stat stat = zk.exists(zkDir, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(stat == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 创建一级节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				zk.create(zkDir, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;	&lt;span class=&quot;comment&quot;&gt;//zkDir非一级节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			String parentDir = zkDir.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, zkDir.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (zk.exists(parentDir, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;	&lt;span class=&quot;comment&quot;&gt;//如果父节点存在，建当前节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				Stat stat = zk.exists(zkDir, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(stat == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;comment&quot;&gt;// 创建非一级节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					zk.create(zkDir, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;	&lt;span class=&quot;comment&quot;&gt;//否则，先建父节点，再建当前节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				createLockDirIfNecessary(parentDir);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				createLockDirIfNecessary(zkDir);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 * zookeeper节点的监视器&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	 */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WatchedEvent event)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.getType() == EventType.NodeDeleted)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.latch!=&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.latch.countDown();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				List&amp;lt;String&amp;gt; childrenNodes = zk.getChildren(lockDir, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 排序&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				Collections.sort(childrenNodes);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Node: &quot;&lt;/span&gt; + event.getPath()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						+ &lt;span class=&quot;string&quot;&gt;&quot; change event is deleted! Current locked nodes:\n\t&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						+ StringUtils.join(childrenNodes,&lt;span class=&quot;string&quot;&gt;&quot;\n\t&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tryLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(tryLockInner())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; waitForLockInner(waitNodePath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;tryLockInner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(lockName.contains(lockSymbol))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;lockName can not contains &quot;&lt;/span&gt; + lockSymbol);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//创建临时子节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			myNodePath = zk.create(lockDir + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + lockName + lockSymbol, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;], Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL_SEQUENTIAL);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			System.out.println(threadId + &lt;span class=&quot;string&quot;&gt;&quot; created &quot;&lt;/span&gt; + myNodePath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//取出所有子节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			List&amp;lt;String&amp;gt; subNodes = zk.getChildren(lockDir, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//取出所有lockName的锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			List&amp;lt;String&amp;gt; lockedNodes = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;String&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String node : subNodes) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				String nodePrefix = node.split(lockSymbol)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(nodePrefix.equals(lockName))&amp;#123;&lt;span class=&quot;comment&quot;&gt;//对锁名做个判断，前缀相同即为同一组锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					lockedNodes.add(node);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Collections.sort(lockedNodes);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Current locked nodes: \n\t&quot;&lt;/span&gt; + StringUtils.join(lockedNodes, &lt;span class=&quot;string&quot;&gt;&quot;\n\t&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(myNodePath.equals(lockDir + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + lockedNodes.get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;//如果是最小的节点,则表示取得锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//如果不是最小的节点，找到比自己小1的节点，在List中的位置是自己的前一位&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			String myZnodeName = myNodePath.substring(myNodePath.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			waitNodePath = lockDir + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + lockedNodes.get(lockedNodes.indexOf(myZnodeName)-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;waitForLockInner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String waitPath)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; InterruptedException, KeeperException &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Stat stat = zk.exists(waitPath, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//判断比自己小一个数的节点是否存在,如果存在则需等待锁,同时注册监听&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (stat != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	System.out.println(threadId + &lt;span class=&quot;string&quot;&gt;&quot; waiting for &quot;&lt;/span&gt; + waitPath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.latch = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CountDownLatch(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.latch.await(); &lt;span class=&quot;comment&quot;&gt;//不加超时时间，无限等待&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//waiting&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//Zzzzz...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//still waiting&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;comment&quot;&gt;// 探测到节点变化，刷新节点信息&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.latch = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 确认myNodePath是否真的是列表中的最小节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				List&amp;lt;String&amp;gt; childrenNodes = zk.getChildren(lockDir, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;comment&quot;&gt;// 排序&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				Collections.sort(childrenNodes);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(myNodePath.equals(lockDir + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + childrenNodes.get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				    &lt;span class=&quot;comment&quot;&gt;// 说明waitNodePath是由于出现异常而挂掉的 , 更新waitNodePath&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					String thisNodeName = myNodePath.substring(myNodePath.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = childrenNodes.indexOf(thisNodeName);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					waitNodePath = lockDir + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + childrenNodes.get(index - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;comment&quot;&gt;//重新等待锁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; waitForLockInner(waitNodePath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;unlock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			System.out.println(threadId + &lt;span class=&quot;string&quot;&gt;&quot; unlock &quot;&lt;/span&gt; + myNodePath);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			zk.delete(myNodePath,-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			myNodePath = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			zk.close();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;Error while releasing lock! &quot;&lt;/span&gt; + e.getMessage(), e);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;Error while releasing lock! &quot;&lt;/span&gt; + e.getMessage(), e);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;//一个简单的测试&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;Thread&amp;gt; workers = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Thread&amp;gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; ++i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			Thread thread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				String zk = &lt;span class=&quot;string&quot;&gt;&quot;10.12.10.169:2181,10.12.139.141:2181&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						DistributedExclusiveLock lock = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DistributedExclusiveLock(zk, &lt;span class=&quot;string&quot;&gt;&quot;zkLock&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lock.tryLock());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;							String tid = &lt;span class=&quot;string&quot;&gt;&quot;Thread-&quot;&lt;/span&gt; + Thread.currentThread().getId();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;							&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; time = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Random().nextInt(&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;							System.out.println(tid + &lt;span class=&quot;string&quot;&gt;&quot; gets lock and is working, sleep for &quot;&lt;/span&gt; + time + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;							Thread.sleep(time);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;							lock.unlock();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;							System.out.println(tid + &lt;span class=&quot;string&quot;&gt;&quot; releases lock&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;						e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;					&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;				&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			thread.setDaemon(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			workers.add(thread);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Thread t : workers)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			t.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Thread.sleep(&lt;span class=&quot;number&quot;&gt;100000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在分布式系统中，经常遇到这样一种场景：选举一个节点执行某一个任务，当此节点宕机后，其他节点可以接管并继续执行这个任务。由于各个节点运行的代码
    
    </summary>
    
      <category term="分布式应用" scheme="http://maohong.tech/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="zookeeper" scheme="http://maohong.tech/tags/zookeeper/"/>
    
      <category term="分布式应用" scheme="http://maohong.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8/"/>
    
      <category term="分布式协调" scheme="http://maohong.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%B0%83/"/>
    
  </entry>
  
  <entry>
    <title>使用httpclient引起的tcp连接数超高问题</title>
    <link href="http://maohong.tech/2014/03/28/%E4%BD%BF%E7%94%A8httpclient%E5%BC%95%E8%B5%B7%E7%9A%84tcp%E8%BF%9E%E6%8E%A5%E6%95%B0%E8%B6%85%E9%AB%98%E9%97%AE%E9%A2%98/"/>
    <id>http://maohong.tech/2014/03/28/使用httpclient引起的tcp连接数超高问题/</id>
    <published>2014-03-28T09:44:58.000Z</published>
    <updated>2016-07-04T15:48:19.000Z</updated>
    
    <content type="html">&lt;p&gt;组内的一个系统新上线了通过图片url上传图片到图片存储平台的功能。其中使用了httpclient，通过向图片存储平台发送MultipartPostMethod上传图片。当业务量较大时，10个处理线程满负荷运行，上传图片时，发现应用系统服务器的tcp连接数陡然升高，&lt;font color=&quot;red&quot;&gt;峰值能达到几万个tcp连接数！&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;排查系统代码并结合分析httpclient的源码发现，应用系统每次上传图片时，都会做new HttpClient()操作，这个操作内部默认使用的是SimpleHttpConnectionManager来管理http连接，而SimpleHttpConnectionManager有个默认字段alwaysClose=false，表示当外部程序调用了HttpMethod.releaseConnection()时并不会立即释放连接，而是保持这个连接并尝试用于后续的请求，在连接空闲一段时间后（默认3秒）才真正释放。&lt;/p&gt;
&lt;p&gt;因此，当业务量较大，&lt;font color=&quot;red&quot;&gt;系统高并发发送post请求时，new出来的HttpClient对象会很多，而这个对象使用完毕后，而当中建立的client对象在短时间内并不会立即释放连接&lt;/font&gt;，因此，随着时间的积累，tcp连接数保持居高不下。&lt;/p&gt;
&lt;p&gt;通过查看官方文档，建议在高并发环境下使用MultiThreadedHttpConnectionManager来管理httpclient，因此，我们将httpclient改为单例后，tcp连接数回复正常水平。&lt;/p&gt;
&lt;p&gt;通过管理httpclient的代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; HttpClient &lt;span class=&quot;title&quot;&gt;initHttpClient&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    HttpConnectionManagerParams params = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HttpConnectionManagerParams();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//指定向每个host发起的最大连接数，默认是2，太少了&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    params.setDefaultMaxConnectionsPerHost(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//指定总共发起的最大连接数，默认是20，太少了&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    params.setMaxTotalConnections(&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//连接超时时间-10s&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    params.setConnectionTimeout(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//读取数据超时时间-60s&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    params.setSoTimeout(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    MultiThreadedHttpConnectionManager manager = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MultiThreadedHttpConnectionManager();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    manager.setParams(params);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HttpClient(manager);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;组内的一个系统新上线了通过图片url上传图片到图片存储平台的功能。其中使用了httpclient，通过向图片存储平台发送MultipartPostMethod上传图片。当业务量较大时，10个处理线程满负荷运行，上传图片时，发现应用系统服务器的tcp连接数陡然升高，&lt;font
    
    </summary>
    
      <category term="问题分析" scheme="http://maohong.tech/categories/%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
    
      <category term="httpclient" scheme="http://maohong.tech/tags/httpclient/"/>
    
      <category term="tcp连接数" scheme="http://maohong.tech/tags/tcp%E8%BF%9E%E6%8E%A5%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>前后端的CharacterEncoding不一致导致提交的表单数据丢失问题</title>
    <link href="http://maohong.tech/2014/03/20/%E5%89%8D%E5%90%8E%E7%AB%AF%E7%9A%84CharacterEncoding%E4%B8%8D%E4%B8%80%E8%87%B4%E5%AF%BC%E8%87%B4%E6%8F%90%E4%BA%A4%E7%9A%84%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/"/>
    <id>http://maohong.tech/2014/03/20/前后端的CharacterEncoding不一致导致提交的表单数据丢失问题/</id>
    <published>2014-03-20T03:09:03.000Z</published>
    <updated>2016-07-04T16:11:10.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在开发分布式任务调度系统的web端时，遇到一个坑，记录如下：&lt;/p&gt;
&lt;p&gt;在页面上新增和修改任务，提交后，任务的属性在后端怎么都接收不到，但是在另一个协同开发的同学那边本地调试就OK，在我的本地和公共开发环境都不行，这不合理啊。。。。。&lt;/p&gt;
&lt;p&gt;排查了很多地方，js、setter等等，一直没发现问题在哪。跟负责前端的同学交流了下，发现前端post的数据确实是修改过的，也就是后端接收有问题。&lt;/p&gt;
&lt;p&gt;于是把最新版本和历史版本对比，发现最新版本新增了一个LogFilter，用于记录pagedelay的，仔细一看，logFilter里面是&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;request.setCharacterEncoding(“UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;″);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;response.setContentType(“text/html;charset=UTF-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;″);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但页面上是GBK编码，所以导致数据在这个filter中编码出错，造成数据丢失，后端接收到的数据为null。&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;解决方法：&lt;/font&gt;

&lt;p&gt;把logFilter里的UTF-8改为GBK，就一切正常了。&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;疑问：&lt;/font&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为何历史本没问题呢，因为历史版本中的logFilter配在struts2Filter之后，请求根本走不到logFilter里去。。。。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为何协同开发的同学本地调试没问题呢，那是因为他把web.xml里的LogFilter的filtermapping注掉了。。。。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好一个歪萝卜大烂坑。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在开发分布式任务调度系统的web端时，遇到一个坑，记录如下：&lt;/p&gt;
&lt;p&gt;在页面上新增和修改任务，提交后，任务的属性在后端怎么都接收不到，但是在另一个协同开发的同学那边本地调试就OK，在我的本地和公共开发环境都不行，这不合理啊。。。。。&lt;/p&gt;
&lt;p&gt;排查了很多地方，
    
    </summary>
    
      <category term="问题分析" scheme="http://maohong.tech/categories/%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
    
    
      <category term="web开发" scheme="http://maohong.tech/tags/web%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="http://maohong.tech/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>使用shell切割文件</title>
    <link href="http://maohong.tech/2013/03/07/%E4%BD%BF%E7%94%A8shell%E5%88%87%E5%89%B2%E6%96%87%E4%BB%B6/"/>
    <id>http://maohong.tech/2013/03/07/使用shell切割文件/</id>
    <published>2013-03-07T05:49:44.000Z</published>
    <updated>2016-07-04T15:51:27.000Z</updated>
    
    <content type="html">&lt;p&gt;最近工作中需要使用shell，从远程rsync数据过来预处理后提交到hdfs中，再调用pig脚本在hadoop集群上处理数据，完了fs -get下来结果文件并进行进一步处理，再推送给其他系统使用。其间需要将pig作业的结果文件合并并且均分为10个文件推送给远程服务器上的应用加载。因为结果文件比较大，远程应用拿到结果文件后使用多线程加载，所以需均分为10个小文件。虽然mr作业出来的文件结果也是part-00000、part-00001，但若pig脚本中不指定reduce任务数，产生的结果文件个数是3个，而且下下来之后需要进行重命名。与其这样还不如自己处理。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;rm -rf $TODAY_ALL_INDUSKEY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	for allName in `find $TODAY_ALL_TMP_DIR -name &quot;part-*&quot;`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		do&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			INFO &quot;Processing result file&quot; $allName&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			cat $allName &amp;gt;&amp;gt; $TODAY_ALL_INDUSKEY   #把结果文件重定向到一个文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	done&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	ALL_INDUSKEY_FILE_NUM=10    #拆分的文件数量&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	ALL_KEY_LINES=0             #结果文件行数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	INFO &quot;Split $TODAY_ALL_INDUSKEY into $ALL_INDUSKEY_FILE_NUM files&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	for str in `wc -l $TODAY_ALL_INDUSKEY`;	do&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		t=`expr match $str &quot;[1-9][0-9]*$&quot;`;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		if [ $t -gt 0 ]; then&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			ALL_KEY_LINES=$str         #获取结果文件行数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			INFO &quot;Line of $TODAY_ALL_INDUSKEY is $ALL_KEY_LINES&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		fi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	done&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if [ $ALL_KEY_LINES -ne 0 ]; then&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		tmpLine=`echo &quot;scale=2;$ALL_KEY_LINES/$ALL_INDUSKEY_FILE_NUM&quot;|bc`    #每个小文件的行数，保留两位小数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		INFO &quot;$ALL_KEY_LINES/$ALL_INDUSKEY_FILE_NUM=$tmpLine&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		subFileLines=`echo $(($&amp;#123;tmpLine//.*/+1&amp;#125;))`        #向上取整&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		INFO &quot;Per subfile lines:$subFileLines&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		split -l $subFileLines -a 1 -d $TODAY_ALL_INDUSKEY $TODAY_ALL_INDUSKEY&quot;_&quot;      #拆分文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	fi&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	if [ -f $TODAY_ALL_INDUSKEY ]; then&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		touch $TODAY_ALL_INDUSKEY.done       #创建done文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		rm -rf $TODAY_ALL_TMP_DIR&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		INFO &quot;Process result file dir $TODAY_ALL_TMP_DIR done!&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	fi&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近工作中需要使用shell，从远程rsync数据过来预处理后提交到hdfs中，再调用pig脚本在hadoop集群上处理数据，完了fs -get下来结果文件并进行进一步处理，再推送给其他系统使用。其间需要将pig作业的结果文件合并并且均分为10个文件推送给远程服务器上的应用
    
    </summary>
    
    
      <category term="shell" scheme="http://maohong.tech/tags/shell/"/>
    
      <category term="linux" scheme="http://maohong.tech/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Shell中的IFS分隔符使用</title>
    <link href="http://maohong.tech/2013/01/29/shell%E4%B8%AD%E7%9A%84IFS%E5%88%86%E9%9A%94%E7%AC%A6/"/>
    <id>http://maohong.tech/2013/01/29/shell中的IFS分隔符/</id>
    <published>2013-01-29T12:41:54.000Z</published>
    <updated>2016-07-04T15:52:28.000Z</updated>
    
    <content type="html">&lt;p&gt;在linux中，shell把每个 $IFS 字符对待成一个分隔符，且基于这些字符把其他扩展的结果分割。&lt;/p&gt;
&lt;p&gt;工作中需要处理一个文件datafile，文件中有好几列，列与列之间以‘\3′分割，如下(终端下’\3′显示为方块)：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20130129/shell.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;我需要拿到文件中&lt;font color=&quot;blue&quot;&gt;第三列为1&lt;/font&gt;的数据行再做具体的处理，比如取其中的某一列数据再去其他文件grep数据等等。简单点，直接逐行cat数据吧。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;脚本如下：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;for line in `awk -F&quot;\3&quot; &#39;&amp;#123;if($3==1) print $0&amp;#125;&#39; datafile`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    do&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        echo $line&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;done&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;结果如下：&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20130129/shell2.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;p&gt;本来是想要逐行打印出来的，可结果却不是我想要的，究其原因，是因为在shell的for循环中，列出集合的item时，默认是以&lt;space&gt;或&lt;tab&gt;或&lt;newline&gt;为分隔符，我们的数据文件中有空格，因此它就以空格分割打印了。&lt;/newline&gt;&lt;/tab&gt;&lt;/space&gt;&lt;/p&gt;
&lt;p&gt;可以通过显式设置IFS的值来达到我们要的效果，修改后的脚本如下：  &lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;oldifs=$IFS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IFS=$&#39;\n&#39;    #change seperator to &#39;\n&#39; to get a line&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for line in `awk -F&quot;\3&quot; &#39;&amp;#123;if($3==1) print $0&amp;#125;&#39; datafile`&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    do&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        echo $line&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;done&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IFS=$oldifs #reset seperator&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过先保存当前的IFS变量的值到一个临时变量，再显式设置为我们想要的行分隔符$’\n’，然后在for循环结束后，再重置IFS的值即可。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结果如下：&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/maohong/picture/master/20130129/shell3.png&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在linux中，shell把每个 $IFS 字符对待成一个分隔符，且基于这些字符把其他扩展的结果分割。&lt;/p&gt;
&lt;p&gt;工作中需要处理一个文件datafile，文件中有好几列，列与列之间以‘\3′分割，如下(终端下’\3′显示为方块)：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;ht
    
    </summary>
    
      <category term="Shell" scheme="http://maohong.tech/categories/Shell/"/>
    
    
      <category term="shell" scheme="http://maohong.tech/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>将Hadoop RPC框架应用于多节点任务调度</title>
    <link href="http://maohong.tech/2013/01/21/%E5%B0%86Hadoop-RPC%E6%A1%86%E6%9E%B6%E5%BA%94%E7%94%A8%E4%BA%8E%E5%A4%9A%E8%8A%82%E7%82%B9%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/"/>
    <id>http://maohong.tech/2013/01/21/将Hadoop-RPC框架应用于多节点任务调度/</id>
    <published>2013-01-21T12:53:38.000Z</published>
    <updated>2016-07-09T13:04:59.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在hadoop中，主从节点之间保持着心跳通信，用于传输节点状态信息、任务调度信息以及节点动作信息等等。 hdfs的namenode与datanode，mapreduce的jobtracker与tasktracker，hbase的hmaster与 regionserver之间的通信，都是基于hadoop RPC。Hadoop RPC是hadoop里非常基础的通信框架。hadoop 2.0以前hadoop RPC的数据序列化是通过实现自己定义的Writable接口实现，而从hadoop 2.0开始，数据的序列化工作交给了ProtocolBuffer去做。关于Hadoop RPC的实现原理已经有很多文章进行了详细的介绍（&lt;a href=&quot;http://weixiaolu.iteye.com/blog/1504898&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;源码级强力分析hadoop的RPC机制&lt;/a&gt;，&lt;a href=&quot;http://yanbohappy.sinaapp.com/?p=110&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hadoop基于Protocol Buffer的RPC实现代码分析-Server端&lt;/a&gt;，&lt;a href=&quot;http://yanbohappy.sinaapp.com/?p=115&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;带有HA功能的Hadoop Client端RPC实现原理与代码分析&lt;/a&gt;），这里就不在赘述了。下面就直接引入问题和方案吧。  &lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;工作中经常需要在定时任务系统上写一些定时任务，随着业务规模的增长和扩大，需要定时处理的任务越来越多，任务之间的执行间隔越来越小，某一时间段内（比如0点、整点或半点）执行的任务会越来越密集，只在一台机器上执行这些任务的话，会出现较大的风险：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任务并发度较高时，单机的系统资源将成为瓶颈  &lt;/li&gt;
&lt;li&gt;如果一个任务的运行占用了整个机器的大部分资源，比如sql查询耗费巨大内存和CPU资源，将直接影响其他任务的运行  &lt;/li&gt;
&lt;li&gt;任务失败后，如果仍然在同一台节点自动重新执行，失败率较高  &lt;/li&gt;
&lt;li&gt;机器宕机后，必须第一时间重启机器或重新部署定时任务系统，所有任务都不能按时执行  &lt;/li&gt;
&lt;li&gt;等等  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot; class=&quot;headerlink&quot; title=&quot;方案&quot;&gt;&lt;/a&gt;方案&lt;/h2&gt;&lt;p&gt;可想而知的是，可以通过将定时任务系统进行分布式改造，使用多个节点执行任务，将任务分发到不同节点上进行处理，并且完善失败重试机制，从而提高系统稳定性，实现任务系统的高可靠。&lt;br&gt;既然是在多个节点之间分发任务，肯定得有个任务的管理者(主节点)，在我们现有的系统中，也就是一套可以部署定时任务的web系统，任务代码更新后，部署好这套web系统，即可通过web页面设置定时任务并且进行调度(在单个节点上执行)。执行任务的节点(子节点)有多个以后，如何分发任务到子节点呢，我们可以把任务的信息封装成一个bean，通过RPC发布给子节点，子节点通过这个任务bean获得任务信息，并在指定的时刻执行任务。同时，子节点可以通过与主节点的心跳通信将节点状态和执行任务的情况告诉主节点。&lt;br&gt;这样其实就与hadoop mapreduce分发任务有点相似了，呵呵，这里主节点与子节点之间的通信，我们就可以通过Hadoop RPC框架来实现了，不同的是，我们分发的任务是定时任务，发布任务时需要将任务的定时信息一并发给子节点。  &lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h2&gt;&lt;p&gt;单点的定时任务系统是基于Quartz的，在分布式环境下，可以继续基于Quartz进行改造，任务的定时信息可以通过Quartz中的JobDetail和Trigger对象来描述并封装，加上任务执行的入口类信息，再通过RPC由主节点发给子节点。子节点收到封装好的任务信息对象后，再构造JobDetail和Trigger，设置好启动时间后，通过入口类启动任务。下面是一个简单的demo。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;以下是一个简单的定时任务信息描述对象CronJobInfo，包括JobDetailInfo和TriggerInfo两个属性：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**
* 定时任务信息，包括任务信息和触发器信息
*/&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CronJobInfo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Writable&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JobDetailInfo jobDetailInfo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JobDetailInfo();
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TriggerInfo triggerInfo = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TriggerInfo();

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DataInput in)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
        jobDetailInfo.readFields(in);
        triggerInfo.readFields(in);
    }

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DataOutput out)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
        jobDetailInfo.write(out);
        triggerInfo.write(out);
    }
    &lt;span class=&quot;comment&quot;&gt;// getters and setters...&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;任务信息JobDetailInfo，由主节点构造，子节点解析构造JobDetail对象：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;JobDetailInfo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Writable&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name; &lt;span class=&quot;comment&quot;&gt;// 任务名称&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String group = Scheduler.DEFAULT_GROUP; &lt;span class=&quot;comment&quot;&gt;// 任务组&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String description; &lt;span class=&quot;comment&quot;&gt;// 任务描述&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Class jobClass; &lt;span class=&quot;comment&quot;&gt;// 任务的启动类&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JobDataMap jobDataMap; &lt;span class=&quot;comment&quot;&gt;// 任务所需的参数，用来给作业提供数据支持的数据结构&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; volatility = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;lt;span&amp;gt;重启应用之后是否删除任务的相关信息,&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; durability = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 任务完成之后是否依然保留到数据库&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; shouldRecover = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 应用重启之后时候忽略过期任务&lt;/span&gt;

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DataInput in)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
        name = WritableUtils.readString(in);
        group = WritableUtils.readString(in);
        description = WritableUtils.readString(in);
        String className = WritableUtils.readString(in);
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (className != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)
        {
          &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;
          {
             jobClass = Class.forName(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; String(className));
          }
          &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException e)
          {
             e.printStackTrace();
          }
        }
        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; dataMapSize = WritableUtils.readVInt(in);
        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (dataMapSize-- &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)
        {
           String key = WritableUtils.readString(in);
           String value = WritableUtils.readString(in);
           jobDataMap.put(key, value);
        }
        volatility = in.readBoolean();
        durability = in.readBoolean();
        shouldRecover = in.readBoolean();
    }

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DataOutput out)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
        WritableUtils.writeString(out, name);
        WritableUtils.writeString(out, group);
        WritableUtils.writeString(out, description);
        WritableUtils.writeString(out, jobClass.getName());
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (jobDataMap == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)
            WritableUtils.writeVInt(out, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);
        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;
        {
            WritableUtils.writeVInt(out, jobDataMap.size());
            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Object k : jobDataMap.keySet())
            {
                WritableUtils.writeString(out, k.toString());
                WritableUtils.writeString(out, jobDataMap.get(k).toString());
            }
        }
        out.writeBoolean(volatility);
        out.writeBoolean(durability);
        out.writeBoolean(shouldRecover);
   }
   &lt;span class=&quot;comment&quot;&gt;//getters and setters&lt;/span&gt;
   &lt;span class=&quot;comment&quot;&gt;//.....&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;任务触发器信息TriggerInfo ，由主节点构造，子节点解析构造Trigger对象：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TriggerInfo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Writable&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name; &lt;span class=&quot;comment&quot;&gt;// trigger名称&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String group = Scheduler.DEFAULT_GROUP; &lt;span class=&quot;comment&quot;&gt;// triger组名称&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String description; &lt;span class=&quot;comment&quot;&gt;// trigger描述&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Date startTime; &lt;span class=&quot;comment&quot;&gt;// 启动时间&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Date endTime; &lt;span class=&quot;comment&quot;&gt;// 结束时间&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; repeatInterval; &lt;span class=&quot;comment&quot;&gt;// 重试时间间隔&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; repeatCount; &lt;span class=&quot;comment&quot;&gt;//重试次数&lt;/span&gt;

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;readFields&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DataInput in)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
       name = WritableUtils.readString(in);
       group = WritableUtils.readString(in);
       description = WritableUtils.readString(in);
       &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; start = in.readLong();
       startTime = start==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date(start);
       &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; end = in.readLong();
       endTime = end==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date(end);
       repeatInterval = in.readLong();
       repeatCount = in.readInt();
    }

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DataOutput out)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
       WritableUtils.writeString(out, name);
       WritableUtils.writeString(out, group);
       WritableUtils.writeString(out, description);
       out.writeLong(startTime == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : startTime.getTime());
       out.writeLong(endTime == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : endTime.getTime());
       out.writeLong(repeatInterval);
       out.writeInt(repeatCount);
    }
    &lt;span class=&quot;comment&quot;&gt;//getters and setters&lt;/span&gt;
    &lt;span class=&quot;comment&quot;&gt;//.....&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主从节点通信的协议：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TaskProtocol&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VersionedProtocol&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; CronJobInfo &lt;span class=&quot;title&quot;&gt;hearbeat&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在这个demo中，主节点启动后，启动RPC server线程，等待客户端（子节点）的连接，当客户端调用heartbeat方法时，主节点将会生成一个任务信息返回给客户端：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TaskScheduler&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TaskProtocol&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Logger logger = Logger.getLogger(getClass());
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Server server;

    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TaskScheduler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;
        {
            server = RPC.getServer(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;192.168.1.101&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Configuration());
            server.start();
            server.join();
        }
        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (UnknownHostException e)
        {
            e.printStackTrace();
        }
        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e)
        {
            e.printStackTrace();
        }
        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)
        {
            e.printStackTrace();
        }
    }

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getProtocolVersion&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String arg0, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; arg1)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException
    &lt;/span&gt;{
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;
    }

    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; CronJobInfo &lt;span class=&quot;title&quot;&gt;generateCronJob&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        &lt;span class=&quot;comment&quot;&gt;// 1、创建JobDetial对象&lt;/span&gt;
        JobDetailInfo detail = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JobDetailInfo();
        &lt;span class=&quot;comment&quot;&gt;// 设置工作项&lt;/span&gt;
        detail.setJobClass(DemoTask.class);
        detail.setName(&lt;span class=&quot;string&quot;&gt;&quot;MyJob_1&quot;&lt;/span&gt;);
        detail.setGroup(&lt;span class=&quot;string&quot;&gt;&quot;JobGroup_1&quot;&lt;/span&gt;);

        &lt;span class=&quot;comment&quot;&gt;// 2、创建Trigger对象&lt;/span&gt;
        TriggerInfo trigger = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TriggerInfo();
        trigger.setName(&lt;span class=&quot;string&quot;&gt;&quot;Trigger_1&quot;&lt;/span&gt;);
        trigger.setGroup(&lt;span class=&quot;string&quot;&gt;&quot;Trigger_Group_1&quot;&lt;/span&gt;);
        trigger.setStartTime(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date());
        &lt;span class=&quot;comment&quot;&gt;// 设置重复停止时间，并销毁该Trigger对象&lt;/span&gt;
        Calendar c = Calendar.getInstance();
        c.setTimeInMillis(System.currentTimeMillis() + &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1L&lt;/span&gt;);
        trigger.setEndTime(c.getTime());
        &lt;span class=&quot;comment&quot;&gt;// 设置重复间隔时间&lt;/span&gt;
        trigger.setRepeatInterval(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1L&lt;/span&gt;);
        &lt;span class=&quot;comment&quot;&gt;// 设置重复执行次数&lt;/span&gt;
        trigger.setRepeatCount(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);

        CronJobInfo info = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CronJobInfo();
        info.setJobDetailInfo(detail);
        info.setTriggerInfo(trigger);

        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; info;
    }

    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;
    &lt;/span&gt;{
        TaskScheduler ts = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TaskScheduler();
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;demo任务类，打印信息：  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DemoTask&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Job&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JobExecutionContext context)&lt;/span&gt;
            &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; JobExecutionException
    &lt;/span&gt;{
        System.out.println(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;: executing task @&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Date());
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;子节点demo，启动后连接主节点，远程调用generateCronJob方法，获得一个任务描述信息，并启动定时任务。  &lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TaskRunner&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Logger logger = Logger.getLogger(getClass());
    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TaskProtocol proxy;

    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TaskRunner&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        InetSocketAddress addr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InetSocketAddress(&lt;span class=&quot;string&quot;&gt;&quot;localhost&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;);
        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;
        {
            proxy = (TaskProtocol) RPC.waitForProxy(TaskProtocol.class, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, addr,
                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Configuration());
        }
        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e)
        {
            e.printStackTrace();
        }
    }

    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        RPC.stopProxy(proxy);
    }

    &lt;span class=&quot;comment&quot;&gt;/**
     * 从server获取一个定时任务
     */&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getCronJob&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;
    &lt;/span&gt;{
        CronJobInfo info = proxy.generateCronJob();
        JobDetail jobDetail = getJobDetail(info.getJobDetailInfo());
        SimpleTrigger trigger = getTrigger(info.getTriggerInfo());

        &lt;span class=&quot;comment&quot;&gt;// 创建Scheduler对象，并配置JobDetail和Trigger对象&lt;/span&gt;
        SchedulerFactory sf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StdSchedulerFactory();
        Scheduler scheduler = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;
        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;
        {
            scheduler = sf.getScheduler();
            scheduler.scheduleJob(jobDetail, trigger);
            &lt;span class=&quot;comment&quot;&gt;// 执行启动操作&lt;/span&gt;
            scheduler.start();

        }
        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SchedulerException e)
        {
            e.printStackTrace();
        }
    }

    &lt;span class=&quot;comment&quot;&gt;/**
     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; jobDetailInfo
     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;
     */&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; JobDetail &lt;span class=&quot;title&quot;&gt;getJobDetail&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JobDetailInfo info)&lt;/span&gt;
    &lt;/span&gt;{
        JobDetail detail = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JobDetail();
        detail.setName(info.getName());
        detail.setGroup(info.getGroup());
        detail.setDescription(info.getDescription());
        detail.setJobClass(info.getJobClass());
        detail.setJobDataMap(info.getJobDataMap());
        detail.setRequestsRecovery(info.isShouldRecover());
        detail.setDurability(info.isDurability());
        detail.setVolatility(info.isVolatility());
        logger.info(&lt;span class=&quot;string&quot;&gt;&quot;client get jobdetail:&quot;&lt;/span&gt; + detail);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; detail;
    }

    &lt;span class=&quot;comment&quot;&gt;/**
     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; triggerInfo
     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;
     */&lt;/span&gt;
    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; SimpleTrigger &lt;span class=&quot;title&quot;&gt;getTrigger&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TriggerInfo info)&lt;/span&gt;
    &lt;/span&gt;{
        SimpleTrigger trigger = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleTrigger();
        trigger.setName(info.getName());
        trigger.setGroup(info.getGroup());
        trigger.setDescription(info.getDescription());
        trigger.setStartTime(info.getStartTime());
        trigger.setEndTime(info.getEndTime());
        trigger.setRepeatInterval(info.getRepeatInterval());
        trigger.setRepeatCount(info.getRepeatCount());
        logger.info(&lt;span class=&quot;string&quot;&gt;&quot;client get trigger:&quot;&lt;/span&gt; + trigger);
        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; trigger;
    }

    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;
    &lt;/span&gt;{
        TaskRunner t = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TaskRunner();
        t.getCronJob();
        t.close();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;先启动TaskScheduler，再启动TaskRunner，结果如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TaskScheduler日志:&lt;br&gt;2013-01-20 15:42:21,661 [Socket Reader #1 for port 8888] INFO  [org.apache.hadoop.ipc.Server] – Starting Socket Reader #1 for port 8888&lt;br&gt;2013-01-20 15:42:21,662 [main] INFO  [org.apache.hadoop.ipc.metrics.RpcMetrics] – Initializing RPC Metrics with hostName=TaskScheduler, port=8888&lt;br&gt;2013-01-20 15:42:21,706 [main] INFO  [org.apache.hadoop.ipc.metrics.RpcDetailedMetrics] – Initializing RPC Metrics with hostName=TaskScheduler, port=8888&lt;br&gt;2013-01-20 15:42:21,710 [IPC Server listener on 8888] INFO  [org.apache.hadoop.ipc.Server] – IPC Server listener on 8888: starting&lt;br&gt;2013-01-20 15:42:21,711 [IPC Server Responder] INFO  [org.apache.hadoop.ipc.Server] – IPC Server Responder: starting&lt;br&gt;2013-01-20 15:42:21,711 [IPC Server handler 0 on 8888] INFO  [org.apache.hadoop.ipc.Server] – IPC Server handler 0 on 8888: starting&lt;br&gt;2013-01-20 15:42:24,084 [IPC Server handler 0 on 8888] INFO  [org.mh.rpc.task.TaskScheduler] – generate a task: org.mh.rpc.task.JobDetailInfo@1f26605&lt;/p&gt;
&lt;p&gt;TaskRunner:&lt;br&gt;2013-01-20 15:42:26,323 [main] INFO  [org.mh.rpc.task.TaskRunner] – client get jobdetail:JobDetail ‘JobGroup_1.MyJob_1′:  jobClass: ‘org.mh.rpc.quartz.GetSumTask isStateful: false isVolatile: false isDurable: false requestsRecovers: false&lt;br&gt;2013-01-20 15:42:26,329 [main] INFO  [org.mh.rpc.task.TaskRunner] – client get trigger:Trigger ‘Trigger_Group_1.Trigger&lt;em&gt;1′:  triggerClass: ‘org.quartz.SimpleTrigger isVolatile: false calendar: ‘null’ misfireInstruction: 0 nextFireTime: null&lt;br&gt;2013-01-20 15:42:26,382 [main] INFO  [org.quartz.simpl.SimpleThreadPool] – Job execution threads will use class loader of thread: main&lt;br&gt;2013-01-20 15:42:26,411 [main] INFO  [org.quartz.core.SchedulerSignalerImpl] – Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl&lt;br&gt;2013-01-20 15:42:26,411 [main] INFO  [org.quartz.core.QuartzScheduler] – Quartz Scheduler v.1.6.5 created.&lt;br&gt;2013-01-20 15:42:26,413 [main] INFO  [org.quartz.simpl.RAMJobStore] – RAMJobStore initialized.&lt;br&gt;2013-01-20 15:42:26,413 [main] INFO  [org.quartz.impl.StdSchedulerFactory] – Quartz scheduler ‘DefaultQuartzScheduler’ initialized from default resource file in Quartz package: ‘quartz.properties’&lt;br&gt;2013-01-20 15:42:26,413 [main] INFO  [org.quartz.impl.StdSchedulerFactory] – Quartz scheduler version: 1.6.5&lt;br&gt;2013-01-20 15:42:26,415 [main] INFO  [org.quartz.core.QuartzScheduler] – Scheduler DefaultQuartzScheduler&lt;/em&gt;$_NON_CLUSTERED started.&lt;br&gt;org.mh.rpc.quartz.DemoTask@1b66b06: executing task @Sun Jan 20 15:42:26 CST 2013&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面是一个简单的demo，演示了如何通过RPC将任务调度给节点去执行，对于Quartz来说，任务的形式可以千变万化，关键就看怎么去使用了，分发到多个节点上执行的话，就还需要对任务的信息做更多的封装了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在hadoop中，主从节点之间保持着心跳通信，用于传输节点状态信息、任务调度信息以及节点动作信息等等。 hdfs的namenode与datanode，mapreduce的jobtracker与tasktracker，hbase的hmaster与 regionserver之间的通信，都是基于hadoop RPC。Hadoop RPC是hadoop里非常基础的通信框架。hadoop 2.0以前hadoop RPC的数据序列化是通过实现自己定义的Writable接口实现，而从hadoop 2.0开始，数据的序列化工作交给了ProtocolBuffer去做。关于Hadoop RPC的实现原理已经有很多文章进行了详细的介绍（&lt;a href=&quot;http://weixiaolu.iteye.com/blog/1504898&quot;&gt;源码级强力分析hadoop的RPC机制&lt;/a&gt;，&lt;a href=&quot;http://yanbohappy.sinaapp.com/?p=110&quot;&gt;Hadoop基于Protocol Buffer的RPC实现代码分析-Server端&lt;/a&gt;，&lt;a href=&quot;http://yanbohappy.sinaapp.com/?p=115&quot;&gt;带有HA功能的Hadoop Client端RPC实现原理与代码分析&lt;/a&gt;），这里就不在赘述了。下面就直接引入问题和方案吧。  &lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;工作中经常需要在定时任务系统上写一些定时任务，随着业务规模的增长和扩大，需要定时处理的任务越来越多，任务之间的执行间隔越来越小，某一时间段内（比如0点、整点或半点）执行的任务会越来越密集，只在一台机器上执行这些任务的话，会出现较大的风险：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任务并发度较高时，单机的系统资源将成为瓶颈  &lt;/li&gt;
&lt;li&gt;如果一个任务的运行占用了整个机器的大部分资源，比如sql查询耗费巨大内存和CPU资源，将直接影响其他任务的运行  &lt;/li&gt;
&lt;li&gt;任务失败后，如果仍然在同一台节点自动重新执行，失败率较高  &lt;/li&gt;
&lt;li&gt;机器宕机后，必须第一时间重启机器或重新部署定时任务系统，所有任务都不能按时执行  &lt;/li&gt;
&lt;li&gt;等等  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;方案&quot;&gt;&lt;a href=&quot;#方案&quot; class=&quot;headerlink&quot; title=&quot;方案&quot;&gt;&lt;/a&gt;方案&lt;/h2&gt;&lt;p&gt;可想而知的是，可以通过将定时任务系统进行分布式改造，使用多个节点执行任务，将任务分发到不同节点上进行处理，并且完善失败重试机制，从而提高系统稳定性，实现任务系统的高可靠。&lt;br&gt;既然是在多个节点之间分发任务，肯定得有个任务的管理者(主节点)，在我们现有的系统中，也就是一套可以部署定时任务的web系统，任务代码更新后，部署好这套web系统，即可通过web页面设置定时任务并且进行调度(在单个节点上执行)。执行任务的节点(子节点)有多个以后，如何分发任务到子节点呢，我们可以把任务的信息封装成一个bean，通过RPC发布给子节点，子节点通过这个任务bean获得任务信息，并在指定的时刻执行任务。同时，子节点可以通过与主节点的心跳通信将节点状态和执行任务的情况告诉主节点。&lt;br&gt;这样其实就与hadoop mapreduce分发任务有点相似了，呵呵，这里主节点与子节点之间的通信，我们就可以通过Hadoop RPC框架来实现了，不同的是，我们分发的任务是定时任务，发布任务时需要将任务的定时信息一并发给子节点。  &lt;/p&gt;
&lt;h2 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h2&gt;&lt;p&gt;单点的定时任务系统是基于Quartz的，在分布式环境下，可以继续基于Quartz进行改造，任务的定时信息可以通过Quartz中的JobDetail和Trigger对象来描述并封装，加上任务执行的入口类信息，再通过RPC由主节点发给子节点。子节点收到封装好的任务信息对象后，再构造JobDetail和Trigger，设置好启动时间后，通过入口类启动任务。下面是一个简单的demo。&lt;br&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="http://maohong.tech/categories/Hadoop/"/>
    
    
      <category term="hadoop" scheme="http://maohong.tech/tags/hadoop/"/>
    
      <category term="分布式应用" scheme="http://maohong.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8/"/>
    
      <category term="RPC" scheme="http://maohong.tech/tags/RPC/"/>
    
      <category term="任务调度" scheme="http://maohong.tech/tags/%E4%BB%BB%E5%8A%A1%E8%B0%83%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>使用zookeeper协调多服务器的任务处理</title>
    <link href="http://maohong.tech/2012/11/13/%E4%BD%BF%E7%94%A8zookeeper%E5%8D%8F%E8%B0%83%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86/"/>
    <id>http://maohong.tech/2012/11/13/使用zookeeper协调多服务器的任务处理/</id>
    <published>2012-11-13T08:16:43.000Z</published>
    <updated>2016-07-09T08:47:05.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt;是hadoop的子项目，是google的chubby的开源实现，是一个针对大规模分布式系统的可靠的分布式协调系统。Zookeeper一般部署在一个集群上，通过在集群间维护一个数据树，使得连接到集群的client能够获得统一的数据信息，比如系统公共配置信息、节点存活状态等等。因此，在互联网公司中，zookeeper被广泛运用于统一配置管理、名字服务、分布式同步等。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;我们看下这样一种场景：&lt;br&gt;前台系统每时每刻都生成大量数据，这些原生数据由后台系统处理完毕后再作他用，我们暂且不谈这些数据的存储形式，只关注如何能够尽可能高效的处理。举个例子，前台系统可能是微博的前端发布系统、搜索引擎上的广告投放系统，或者是任务发布系统，后台系统则可能是对微博和广告信息的审查系统，比如用户发的微博如果包含近期敏感信息则不予显示，若是任务，后台系统则负责处理任务具体的执行。&lt;br&gt;若数据量和任务量较小，单节点的后台系统或许可以处理得过来，但是如果数据量和任务量很大（比如新浪微博，龙年正月初一0点0分0秒，共有32312条微博同时发布），单节点的后台系统肯定吃不消，这时候，可想而知的是多节点同时处理前台过来的数据。&lt;br&gt;最简单的方法是，按消息id对后台节点数取模（msgid%server_num=mod），每个后台节点取自己那份数据进行处理，这就需要每个节点都知晓当前有多少个后台节点以及本节点所应取的mod数。但是，当某个节点宕机时，这个节点所应处理的数据无法被继续处理了，势必会造成阻塞，除非重新配置各节点上的参数，将节点数server_num减1，并修改各节点取数据的mod数。&lt;br&gt;毋庸置疑，这样非常麻烦！如果能够将这种配置信息（实际上是数据在节点间分配的控制信息）统一管理起来，在配置信息发生变化时，各个后台节点能够及时知晓其变化，就可以避免上述情况的发生。&lt;br&gt;因此，采用多节点处理数据时，有两个问题：&lt;br&gt;1.避免多个节点重复处理同一条数据，否则造成资源浪费。&lt;br&gt;2.不能有数据被遗漏处理，尤其是在有后台节点down掉的时候。&lt;br&gt;也就是说，采用多节点同时处理数据时，需要将数据隔离开，分别给不同的节点处理，而且在有节点宕机的情况下，所有数据也必须可以无误的被其他可用节点处理。如何做到这一点呢，使用zookeeper吧！&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h2&gt;&lt;p&gt;我们通过zookeeper维护一个目录（比如/app/config），服务器启动时连接zookeeper集群并在该目录下创建表示自己的临时节点（CreateMode.EPHEMERAL），相当于注册一个节点，节点名可以是本服务器的ip，节点的值为该服务器的mod值，按注册顺序从0递增，即第一个注册的节点值为0，第二个为1，依次下去，因此/app/config的子节点数就是注册到zookeeper的服务器数。同时，各服务器监听/app/config目录，当其发生变化（新加入子节点、子节点失效等）时，每个服务器都将获取到这个事件并进行相应的处理。  &lt;/p&gt;
&lt;h2 id=&quot;demo&quot;&gt;&lt;a href=&quot;#demo&quot; class=&quot;headerlink&quot; title=&quot;demo&quot;&gt;&lt;/a&gt;demo&lt;/h2&gt;&lt;p&gt;下面针对以上场景给出一个示例demo。&lt;br&gt;&lt;strong&gt;Server类&lt;/strong&gt;：服务器&lt;br&gt;&lt;strong&gt;ClientThread类&lt;/strong&gt;：服务器上的单个线程&lt;br&gt;&lt;strong&gt;NodeStateWatcher类&lt;/strong&gt;：服务器监听zookeeper集群的监听器&lt;br&gt;&lt;strong&gt;ZkOperationImpl类&lt;/strong&gt;：zookeeper的操作封装（实现ZkOperation接口）&lt;br&gt;Server.java&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;131&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;132&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;133&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;134&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;135&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;136&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;137&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;138&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;139&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;140&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;141&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;142&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;143&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;144&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;145&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;146&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;147&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;148&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;149&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;150&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;151&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;153&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;154&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;155&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;156&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;157&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;158&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;159&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;160&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;161&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;162&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;163&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;164&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;165&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;166&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;167&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;168&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;169&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ClientThread[] clients = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClientThread[Constant.THREAD_COUNT]; &lt;span class=&quot;comment&quot;&gt;// 数据处理线程&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ZkOperation operationCient = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 与zookeeper的连接&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Watcher nodeWatcher = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 向zookeeper注册的监听器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name; &lt;span class=&quot;comment&quot;&gt;// 服务器名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String ip; &lt;span class=&quot;comment&quot;&gt;// 服务器ip&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name, String ip)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.ip = ip;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.operationCient = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ZkOperationImpl();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.nodeWatcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NodeStateWatcher(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.operationCient.init(Constant.ZK_ADDRESS, nodeWatcher);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;Constant.THREAD_COUNT; ++i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ClientThread c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ClientThread(i, ip, name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clients[i]= c;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  initialize();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * 向zookeeper集群注册&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; KeeperException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;registerServer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  List&amp;lt;String&amp;gt; children = operationCient.getChilds(Constant.ROOT_PATH);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; max = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String childName : children)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   String childPath = Constant.ROOT_PATH + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + childName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mod = Integer.parseInt(operationCient.getData(childPath));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mod &amp;gt; max)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    max = mod;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  String path = Constant.ROOT_PATH + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + ip;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  operationCient.apendTempNode(path, String.valueOf(max&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : ++max));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * 启动数据处理线程&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; Exception&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ClientThread c : clients)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;Start thread-&quot;&lt;/span&gt; + c);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   c.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * 服务器初始化&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; KeeperException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;================&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot; initializing...&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 配置信息的上级目录不存在&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!operationCient.exist(Constant.ROOT_PATH))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   System.err.println(&lt;span class=&quot;string&quot;&gt;&quot;Root path &quot;&lt;/span&gt; + Constant.ROOT_PATH + &lt;span class=&quot;string&quot;&gt;&quot;does not exist!!! Create root path...&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   operationCient.apendPresistentNode(Constant.ROOT_PATH, &lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;Create root path &quot;&lt;/span&gt; + Constant.ROOT_PATH + &lt;span class=&quot;string&quot;&gt;&quot; successfully!&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  registerServer();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  refreshConfig();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot; finish initializing...&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;================&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * watch到节点变化后，刷新节点数和模数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; KeeperException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;================&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;:freshing...&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  refreshConfig();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;:end freshing...&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;================&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;refreshConfig&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  String version = operationCient.getData(Constant.ROOT_PATH);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;SYSTEM VERSION: &quot;&lt;/span&gt; + version);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  List&amp;lt;String&amp;gt; children = operationCient.getChilds(Constant.ROOT_PATH);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 1. 服务器数量为子节点的个数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nodeCount = children.size();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;Server count:&quot;&lt;/span&gt; + nodeCount);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (CommonUtil.BASE)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.BASE = nodeCount * Constant.THREAD_COUNT;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (CommonUtil.BASE.intValue() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Integer mod = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (String childName : children)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// 2. 获取本服务器的模数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childName.equals(ip))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    String childPath = Constant.ROOT_PATH + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + childName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mod = Integer.parseInt(operationCient.getData(childPath));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 3. 刷新数据处理线程的取模数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mod == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   System.err.println(&lt;span class=&quot;string&quot;&gt;&quot;Did not get the mod number for &quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;, mod=&quot;&lt;/span&gt; + mod + &lt;span class=&quot;string&quot;&gt;&quot;,base=&quot;&lt;/span&gt; + CommonUtil.BASE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (ClientThread c : clients)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    c.refresh(mod);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&quot;@&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.ip + &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ClientThread[] getClients()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; clients;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ZkOperation &lt;span class=&quot;title&quot;&gt;getOperationCient&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; operationCient;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Watcher &lt;span class=&quot;title&quot;&gt;getNodeWatcher&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nodeWatcher;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getIp&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ip;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ClientThread.java&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ClientThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Integer modNum = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Integer threadId;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String ip;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String clientName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ClientThread&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer threadId, String ip, String clientName)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.threadId = threadId;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.ip = ip;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clientName = clientName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * watch到节点变化后，调用刷新节点数和模数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * &lt;span class=&quot;doctag&quot;&gt;@throws&lt;/span&gt; KeeperException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mod)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CommonUtil.log(&quot;================&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CommonUtil.log(this + &quot;:freshing...&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.modNum)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.modNum = threadId + mod * Constant.THREAD_COUNT;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt; + modNum + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + CommonUtil.BASE);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CommonUtil.log(this + &quot;:end freshing...&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  CommonUtil.log(&quot;================&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; start = System.currentTimeMillis();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (System.currentTimeMillis() - start &amp;lt; Constant.DURATION)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;// 处理数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   processData();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Thread.sleep(&lt;span class=&quot;number&quot;&gt;5000&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//等待2秒&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  * 模拟处理数据逻辑：打印属于本线程的数据&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;processData&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (CommonUtil.BASE.equals(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) || modNum.equals(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.err(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;: did not get server_count and modNum!!!&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  StringBuilder sb = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuilder(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&quot;-&quot;&lt;/span&gt; + modNum + &lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt; + CommonUtil.BASE + &lt;span class=&quot;string&quot;&gt;&quot;:&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;Constant.NUMBERS.length; ++i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = Constant.NUMBERS[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n % CommonUtil.BASE == modNum)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sb.append(n).append(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(sb.toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;ClientThread_&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.clientName + &lt;span class=&quot;string&quot;&gt;&quot;@&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.ip + &lt;span class=&quot;string&quot;&gt;&quot;-thread_&quot;&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.threadId;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;getModNum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; modNum;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setModNum&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer modNum)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.modNum = modNum;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getClientName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; clientName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;NodeStateWatcher.java&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NodeStateWatcher&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Watcher&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Server server;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NodeStateWatcher&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Server server)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.server = server;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(WatchedEvent event)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  StringBuilder outputStr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuilder();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (server.getName() != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   outputStr.append(server.getName() + &lt;span class=&quot;string&quot;&gt;&quot; get an event.&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  outputStr.append(&lt;span class=&quot;string&quot;&gt;&quot;Path:&quot;&lt;/span&gt; + event.getPath());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  outputStr.append(&lt;span class=&quot;string&quot;&gt;&quot;,state:&quot;&lt;/span&gt; + event.getState());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  outputStr.append(&lt;span class=&quot;string&quot;&gt;&quot;,type:&quot;&lt;/span&gt; + event.getType());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  CommonUtil.log(outputStr.toString());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 发现子节点有变化&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event.getType() == EventType.NodeChildrenChanged&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || event.getType() == EventType.NodeDataChanged&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    || event.getType() == EventType.NodeDeleted)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;In event: &quot;&lt;/span&gt; + event.getType());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    server.refresh();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (KeeperException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    e.printStackTrace();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   CommonUtil.log(&lt;span class=&quot;string&quot;&gt;&quot;End event: &quot;&lt;/span&gt; + event.getType());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ZkOperationImpl.java 部分zk操作代码&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;apendPresistentNode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path, String data)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException, InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (zk != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   zk.create(path, data.getBytes(), Ids.OPEN_ACL_UNSAFE,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     CreateMode.PERSISTENT);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;delNode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (zk != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   zk.delete(path, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;exist&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; KeeperException,&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   InterruptedException&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (zk != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; zk.exists(path, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Main.java：主类，启动demo&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Main&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Server c1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Server(&lt;span class=&quot;string&quot;&gt;&quot;ServerA&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1.1.1.1&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Server c2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Server(&lt;span class=&quot;string&quot;&gt;&quot;ServerB&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1.1.1.2&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Server c3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Server(&lt;span class=&quot;string&quot;&gt;&quot;ServerC&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1.1.1.3&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  c1.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  c2.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  c3.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;验证&quot;&gt;&lt;a href=&quot;#验证&quot; class=&quot;headerlink&quot; title=&quot;验证&quot;&gt;&lt;/a&gt;验证&lt;/h2&gt;&lt;p&gt;由于Server的3个实例在同一台机器上运行，连接到zookeeper时，用的是一个session，所以demo中没有通过程序断开server与zookeeper的连接，如果serverA断开，那么serverB和serverC与zookeeper的session连接也会失效，达不到演示效果，所以我们只能暂时在zookeeper客户端手工更改zookeeper上的配置信息，用于模拟server与zookeeper集群断开连接和增加server的情形。server启动后，会先向zookeeper注册节点，因此我们先手工删除节点，再手工添加节点。&lt;br&gt;手工执行的命令如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[zk: localhost:2181(CONNECTED) 141] delete /demo/1.1.1.3&lt;br&gt;[zk: localhost:2181(CONNECTED) 142] delete /demo/1.1.1.2&lt;br&gt;[zk: localhost:2181(CONNECTED) 143] delete /demo/1.1.1.1&lt;br&gt;[zk: localhost:2181(CONNECTED) 144] create -e /demo/1.1.1.1 0&lt;br&gt;[zk: localhost:2181(CONNECTED) 145] create -e /demo/1.1.1.2 1&lt;br&gt;[zk: localhost:2181(CONNECTED) 146] create -e /demo/1.1.1.3 2  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以通过程序打印信息发现，在节点配置信息每个服务器(Server)上的线程会动态的获取属于自己的数据并打印。当然，这里对数据的处理逻辑很简单，仅仅是打印出来，处理的数据也只是内存中的一个数组，对于类似这样的但是更复杂的应用场景，zookeeper同样适用，但是需要更多的考虑服务器与zookeeper集群连接的可靠性（比如session超时重连）、权限机制等等。&lt;br&gt;上面的demo程序打印信息如下：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[2012-11-14 15:18:42] New zk connection session: 0&lt;br&gt;[2012-11-14 15:18:42] ================&lt;br&gt;[2012-11-14 15:18:42] ServerA@1.1.1.1 initializing…&lt;br&gt;[2012-11-14 15:18:47] Thread-0 get an event.Path:null,state:SyncConnected,type:None&lt;br&gt;[2012-11-14 15:18:47] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:47] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:47] ================&lt;br&gt;[2012-11-14 15:18:47] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:18:47] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:47] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:47] Server count:1&lt;br&gt;[2012-11-14 15:18:47] Server count:1&lt;br&gt;[2012-11-14 15:18:47] ServerA@1.1.1.1, mod=0,base=5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_0:0/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_1:1/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_2:2/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_3:3/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_4:4/5&lt;br&gt;[2012-11-14 15:18:47] ServerA@1.1.1.1 finish initializing…&lt;br&gt;[2012-11-14 15:18:47] ================&lt;br&gt;[2012-11-14 15:18:47] ServerA@1.1.1.1, mod=0,base=5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_0:0/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_1:1/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_2:2/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_3:3/5&lt;br&gt;[2012-11-14 15:18:47] ClientThread_ServerA@1.1.1.1-thread_4:4/5&lt;br&gt;[2012-11-14 15:18:47] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:18:47] ================&lt;br&gt;[2012-11-14 15:18:47] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:47] New zk connection session: 0&lt;br&gt;[2012-11-14 15:18:47] ================&lt;br&gt;[2012-11-14 15:18:47] ServerB@1.1.1.2 initializing…&lt;br&gt;[2012-11-14 15:18:51] Thread-6 get an event.Path:null,state:SyncConnected,type:None&lt;br&gt;[2012-11-14 15:18:51] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:51] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:51] ================&lt;br&gt;[2012-11-14 15:18:51] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:18:51] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:51] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:51] ================&lt;br&gt;[2012-11-14 15:18:51] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:18:51] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:51] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:51] Server count:2&lt;br&gt;[2012-11-14 15:18:51] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:51] ServerA@1.1.1.1, mod=0,base=10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerA@1.1.1.1-thread_0:0/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerA@1.1.1.1-thread_1:1/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerA@1.1.1.1-thread_2:2/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerA@1.1.1.1-thread_3:3/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerA@1.1.1.1-thread_4:4/10&lt;br&gt;[2012-11-14 15:18:51] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:18:51] Server count:2&lt;br&gt;[2012-11-14 15:18:51] ================&lt;br&gt;[2012-11-14 15:18:51] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:51] Server count:2&lt;br&gt;[2012-11-14 15:18:51] ServerB@1.1.1.2, mod=1,base=10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_0:5/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_1:6/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_2:7/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_3:8/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_4:9/10&lt;br&gt;[2012-11-14 15:18:51] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:18:51] ================&lt;br&gt;[2012-11-14 15:18:51] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:51] ServerB@1.1.1.2, mod=1,base=10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_0:5/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_1:6/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_2:7/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_3:8/10&lt;br&gt;[2012-11-14 15:18:51] ClientThread_ServerB@1.1.1.2-thread_4:9/10&lt;br&gt;[2012-11-14 15:18:51] ServerB@1.1.1.2 finish initializing…&lt;br&gt;[2012-11-14 15:18:51] ================&lt;br&gt;[2012-11-14 15:18:51] New zk connection session: 0&lt;br&gt;[2012-11-14 15:18:51] ================&lt;br&gt;[2012-11-14 15:18:51] ServerC@1.1.1.3 initializing…&lt;br&gt;[2012-11-14 15:18:56] Thread-12 get an event.Path:null,state:SyncConnected,type:None&lt;br&gt;[2012-11-14 15:18:56] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:18:56] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:18:56] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:18:56] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:56] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:56] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:56] Server count:3&lt;br&gt;[2012-11-14 15:18:56] ServerA@1.1.1.1, mod=0,base=15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_0:0/15&lt;br&gt;[2012-11-14 15:18:56] Server count:3&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_1:1/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_2:2/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_3:3/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_4:4/15&lt;br&gt;[2012-11-14 15:18:56] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:18:56] Server count:3&lt;br&gt;[2012-11-14 15:18:56] ServerB@1.1.1.2, mod=1,base=15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_0:5/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_1:6/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_2:7/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_3:8/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_4:9/15&lt;br&gt;[2012-11-14 15:18:56] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] Server count:3&lt;br&gt;[2012-11-14 15:18:56] ServerC@1.1.1.3, mod=2,base=15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_0:10/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_1:11/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_2:12/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_3:13/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_4:14/15&lt;br&gt;[2012-11-14 15:18:56] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:18:56] ServerC@1.1.1.3, mod=2,base=15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_0:10/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_1:11/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_2:12/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_3:13/15&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_4:14/15&lt;br&gt;[2012-11-14 15:18:56] ServerC@1.1.1.3 finish initializing…&lt;br&gt;[2012-11-14 15:18:56] ================&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerA@1.1.1.1-thread_0&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerB@1.1.1.2-thread_0&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerC@1.1.1.3-thread_0&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerB@1.1.1.2-thread_1&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerA@1.1.1.1-thread_1&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_0-0/15:15 30&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerA@1.1.1.1-thread_2&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_0-10/15:10 25&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerA@1.1.1.1-thread_3&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_0-5/15:5 20&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerA@1.1.1.1-thread_4&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_1-1/15:1 16&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_3-3/15:3 18&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_2-2/15:2 17&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerB@1.1.1.2-thread_2&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_1-6/15:6 21&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerB@1.1.1.2-thread_3&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_2-7/15:7 22&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_3-8/15:8 23&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerC@1.1.1.3-thread_1&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerB@1.1.1.2-thread_4&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_1-11/15:11 26&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerA@1.1.1.1-thread_4-4/15:4 19&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerC@1.1.1.3-thread_2&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerB@1.1.1.2-thread_4-9/15:9 24&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerC@1.1.1.3-thread_3&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_2-12/15:12 27&lt;br&gt;[2012-11-14 15:18:56] Start thread-ClientThread_ServerC@1.1.1.3-thread_4&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_3-13/15:13 28&lt;br&gt;[2012-11-14 15:18:56] ClientThread_ServerC@1.1.1.3-thread_4-14/15:14 29&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerB@1.1.1.2-thread_0-5/15:5 20&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerA@1.1.1.1-thread_3-3/15:3 18&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerA@1.1.1.1-thread_0-0/15:15 30&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerB@1.1.1.2-thread_1-6/15:6 21&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerA@1.1.1.1-thread_1-1/15:1 16&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerC@1.1.1.3-thread_0-10/15:10 25&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerA@1.1.1.1-thread_2-2/15:2 17&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerB@1.1.1.2-thread_2-7/15:7 22&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerC@1.1.1.3-thread_1-11/15:11 26&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerB@1.1.1.2-thread_3-8/15:8 23&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerA@1.1.1.1-thread_4-4/15:4 19&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerC@1.1.1.3-thread_2-12/15:12 27&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerB@1.1.1.2-thread_4-9/15:9 24&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerC@1.1.1.3-thread_3-13/15:13 28&lt;br&gt;[2012-11-14 15:19:01] ClientThread_ServerC@1.1.1.3-thread_4-14/15:14 29&lt;br&gt;[2012-11-14 15:19:02] Thread-0 get an event.Path:/demo/1.1.1.1,state:SyncConnected,type:NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] In event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:02] Thread-12 get an event.Path:/demo/1.1.1.1,state:SyncConnected,type:NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] In event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:02] Thread-6 get an event.Path:/demo/1.1.1.1,state:SyncConnected,type:NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] In event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:02] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:02] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:02] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:02] Server count:2&lt;br&gt;[2012-11-14 15:19:02] Server count:2&lt;br&gt;Did not get the mod number for ServerA@1.1.1.1&lt;br&gt;[2012-11-14 15:19:02] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] End event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:02] Server count:2&lt;br&gt;[2012-11-14 15:19:02] ServerC@1.1.1.3, mod=2,base=10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_0:10/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_1:11/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_2:12/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_3:13/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_4:14/10&lt;br&gt;[2012-11-14 15:19:02] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] End event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:02] ServerB@1.1.1.2, mod=1,base=10&lt;br&gt;[2012-11-14 15:19:02] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_0:5/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_1:6/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_2:7/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_3:8/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_4:9/10&lt;br&gt;[2012-11-14 15:19:02] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] End event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:02] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:02] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:02] Server count:2&lt;br&gt;[2012-11-14 15:19:02] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] End event: NodeChildrenChanged&lt;br&gt;Did not get the mod number for ServerA@1.1.1.1&lt;br&gt;[2012-11-14 15:19:02] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:02] Server count:2&lt;br&gt;[2012-11-14 15:19:02] Server count:2&lt;br&gt;[2012-11-14 15:19:02] ServerC@1.1.1.3, mod=2,base=10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_0:10/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_1:11/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_2:12/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_3:13/10&lt;br&gt;[2012-11-14 15:19:02] ServerB@1.1.1.2, mod=1,base=10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerC@1.1.1.3-thread_4:14/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_0:5/10&lt;br&gt;[2012-11-14 15:19:02] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_1:6/10&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_2:7/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_3:8/10&lt;br&gt;[2012-11-14 15:19:02] ClientThread_ServerB@1.1.1.2-thread_4:9/10&lt;br&gt;[2012-11-14 15:19:02] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:02] ================&lt;br&gt;[2012-11-14 15:19:02] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerA@1.1.1.1-thread_1-1/10:1 11 21&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerB@1.1.1.2-thread_1-6/10:6 16 26&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerB@1.1.1.2-thread_0-5/10:5 15 25&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerA@1.1.1.1-thread_2-2/10:2 12 22&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerC@1.1.1.3-thread_0-10/10:&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerA@1.1.1.1-thread_3-3/10:3 13 23&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerA@1.1.1.1-thread_0-0/10:10 20 30&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerA@1.1.1.1-thread_4-4/10:4 14 24&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerB@1.1.1.2-thread_2-7/10:7 17 27&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerB@1.1.1.2-thread_3-8/10:8 18 28&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerC@1.1.1.3-thread_1-11/10:&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerC@1.1.1.3-thread_2-12/10:&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerB@1.1.1.2-thread_4-9/10:9 19 29&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerC@1.1.1.3-thread_3-13/10:&lt;br&gt;[2012-11-14 15:19:06] ClientThread_ServerC@1.1.1.3-thread_4-14/10:&lt;br&gt;[2012-11-14 15:19:07] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:07] Thread-12 get an event.Path:/demo/1.1.1.2,state:SyncConnected,type:NodeDeleted&lt;br&gt;[2012-11-14 15:19:07] In event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:07] Thread-6 get an event.Path:/demo/1.1.1.2,state:SyncConnected,type:NodeDeleted&lt;br&gt;[2012-11-14 15:19:07] In event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:07] SYSTEM VERSION: 1&lt;br&gt;Did not get the mod number for ServerA@1.1.1.1&lt;br&gt;[2012-11-14 15:19:07] Server count:1&lt;br&gt;[2012-11-14 15:19:07] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:07] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:07] Server count:1&lt;br&gt;[2012-11-14 15:19:07] Server count:1&lt;br&gt;[2012-11-14 15:19:07] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] End event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:07] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] ServerB@1.1.1.2:freshing…&lt;br&gt;Did not get the mod number for ServerB@1.1.1.2&lt;br&gt;[2012-11-14 15:19:07] ServerC@1.1.1.3, mod=2,base=5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_0:10/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_1:11/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_2:12/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_3:13/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_4:14/5&lt;br&gt;[2012-11-14 15:19:07] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] End event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:07] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:07] SYSTEM VERSION: 1&lt;br&gt;Did not get the mod number for ServerB@1.1.1.2&lt;br&gt;[2012-11-14 15:19:07] Server count:1&lt;br&gt;[2012-11-14 15:19:07] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:07] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:07] Server count:1&lt;br&gt;[2012-11-14 15:19:07] ServerC@1.1.1.3, mod=2,base=5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_0:10/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_1:11/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_2:12/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_3:13/5&lt;br&gt;[2012-11-14 15:19:07] ClientThread_ServerC@1.1.1.3-thread_4:14/5&lt;br&gt;[2012-11-14 15:19:07] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:07] ================&lt;br&gt;[2012-11-14 15:19:07] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerB@1.1.1.2-thread_1-6/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerA@1.1.1.1-thread_0-0/5:5 10 15 20 25 30&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerC@1.1.1.3-thread_0-10/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerA@1.1.1.1-thread_1-1/5:1 6 11 16 21 26&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerA@1.1.1.1-thread_3-3/5:3 8 13 18 23 28&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerB@1.1.1.2-thread_0-5/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerA@1.1.1.1-thread_2-2/5:2 7 12 17 22 27&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerC@1.1.1.3-thread_1-11/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerB@1.1.1.2-thread_3-8/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerB@1.1.1.2-thread_2-7/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerA@1.1.1.1-thread_4-4/5:4 9 14 19 24 29&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerB@1.1.1.2-thread_4-9/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerC@1.1.1.3-thread_2-12/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerC@1.1.1.3-thread_4-14/5:&lt;br&gt;[2012-11-14 15:19:11] ClientThread_ServerC@1.1.1.3-thread_3-13/5:&lt;br&gt;[2012-11-14 15:19:12] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:12] Thread-12 get an event.Path:/demo/1.1.1.3,state:SyncConnected,type:NodeDeleted&lt;br&gt;[2012-11-14 15:19:12] In event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:12] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:12] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:12] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:12] Server count:0&lt;br&gt;[2012-11-14 15:19:12] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:12] Server count:0&lt;br&gt;[2012-11-14 15:19:12] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] Server count:0&lt;br&gt;[2012-11-14 15:19:12] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] End event: NodeDeleted&lt;br&gt;[2012-11-14 15:19:12] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:12] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:12] Server count:0&lt;br&gt;[2012-11-14 15:19:12] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:12] ================&lt;br&gt;[2012-11-14 15:19:12] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerB@1.1.1.2-thread_1: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerA@1.1.1.1-thread_2: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerB@1.1.1.2-thread_0: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerA@1.1.1.1-thread_1: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerC@1.1.1.3-thread_0: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerA@1.1.1.1-thread_3: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerA@1.1.1.1-thread_0: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerA@1.1.1.1-thread_4: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerB@1.1.1.2-thread_3: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerC@1.1.1.3-thread_1: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerB@1.1.1.2-thread_2: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerB@1.1.1.2-thread_4: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerC@1.1.1.3-thread_2: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerC@1.1.1.3-thread_3: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:16] ClientThread_ServerC@1.1.1.3-thread_4: did not get server_count and modNum!!!&lt;br&gt;[2012-11-14 15:19:20] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] ================&lt;br&gt;[2012-11-14 15:19:20] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:20] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] ================&lt;br&gt;[2012-11-14 15:19:20] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:20] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] ================&lt;br&gt;[2012-11-14 15:19:20] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:20] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:20] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:20] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:20] Server count:1&lt;br&gt;Did not get the mod number for ServerC@1.1.1.3&lt;br&gt;[2012-11-14 15:19:20] Server count:1&lt;br&gt;[2012-11-14 15:19:20] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:20] ================&lt;br&gt;[2012-11-14 15:19:20] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:20] ServerA@1.1.1.1, mod=0,base=5&lt;br&gt;[2012-11-14 15:19:20] ClientThread_ServerA@1.1.1.1-thread_0:0/5&lt;br&gt;[2012-11-14 15:19:20] ClientThread_ServerA@1.1.1.1-thread_1:1/5&lt;br&gt;[2012-11-14 15:19:20] ClientThread_ServerA@1.1.1.1-thread_2:2/5&lt;br&gt;[2012-11-14 15:19:20] ClientThread_ServerA@1.1.1.1-thread_3:3/5&lt;br&gt;[2012-11-14 15:19:20] ClientThread_ServerA@1.1.1.1-thread_4:4/5&lt;br&gt;[2012-11-14 15:19:20] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:20] ================&lt;br&gt;[2012-11-14 15:19:20] End event: NodeChildrenChanged&lt;br&gt;Did not get the mod number for ServerB@1.1.1.2&lt;br&gt;[2012-11-14 15:19:20] Server count:1&lt;br&gt;[2012-11-14 15:19:20] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:20] ================&lt;br&gt;[2012-11-14 15:19:20] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerB@1.1.1.2-thread_1-6/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerA@1.1.1.1-thread_0-0/5:5 10 15 20 25 30&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerA@1.1.1.1-thread_2-2/5:2 7 12 17 22 27&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerA@1.1.1.1-thread_1-1/5:1 6 11 16 21 26&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerA@1.1.1.1-thread_3-3/5:3 8 13 18 23 28&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerC@1.1.1.3-thread_0-10/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerB@1.1.1.2-thread_0-5/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerC@1.1.1.3-thread_1-11/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerB@1.1.1.2-thread_3-8/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerA@1.1.1.1-thread_4-4/5:4 9 14 19 24 29&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerB@1.1.1.2-thread_2-7/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerC@1.1.1.3-thread_2-12/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerB@1.1.1.2-thread_4-9/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerC@1.1.1.3-thread_4-14/5:&lt;br&gt;[2012-11-14 15:19:21] ClientThread_ServerC@1.1.1.3-thread_3-13/5:&lt;br&gt;[2012-11-14 15:19:25] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] ================&lt;br&gt;[2012-11-14 15:19:25] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:25] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] ================&lt;br&gt;[2012-11-14 15:19:25] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:25] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] ================&lt;br&gt;[2012-11-14 15:19:25] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:25] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:25] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:25] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:25] Server count:2&lt;br&gt;[2012-11-14 15:19:25] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:25] ================&lt;br&gt;Did not get the mod number for ServerC@1.1.1.3&lt;br&gt;[2012-11-14 15:19:25] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] Server count:2&lt;br&gt;[2012-11-14 15:19:25] Server count:2&lt;br&gt;[2012-11-14 15:19:25] ServerB@1.1.1.2, mod=1,base=10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerB@1.1.1.2-thread_0:5/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerB@1.1.1.2-thread_1:6/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerB@1.1.1.2-thread_2:7/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerB@1.1.1.2-thread_3:8/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerB@1.1.1.2-thread_4:9/10&lt;br&gt;[2012-11-14 15:19:25] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:25] ================&lt;br&gt;[2012-11-14 15:19:25] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:25] ServerA@1.1.1.1, mod=0,base=10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerA@1.1.1.1-thread_0:0/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerA@1.1.1.1-thread_1:1/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerA@1.1.1.1-thread_2:2/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerA@1.1.1.1-thread_3:3/10&lt;br&gt;[2012-11-14 15:19:25] ClientThread_ServerA@1.1.1.1-thread_4:4/10&lt;br&gt;[2012-11-14 15:19:25] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:25] ================&lt;br&gt;[2012-11-14 15:19:25] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerA@1.1.1.1-thread_2-2/10:2 12 22&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerA@1.1.1.1-thread_3-3/10:3 13 23&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerA@1.1.1.1-thread_0-0/10:10 20 30&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerA@1.1.1.1-thread_1-1/10:1 11 21&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerC@1.1.1.3-thread_0-10/10:&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerB@1.1.1.2-thread_0-5/10:5 15 25&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerB@1.1.1.2-thread_1-6/10:6 16 26&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerA@1.1.1.1-thread_4-4/10:4 14 24&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerC@1.1.1.3-thread_1-11/10:&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerB@1.1.1.2-thread_3-8/10:8 18 28&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerB@1.1.1.2-thread_2-7/10:7 17 27&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerB@1.1.1.2-thread_4-9/10:9 19 29&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerC@1.1.1.3-thread_2-12/10:&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerC@1.1.1.3-thread_4-14/10:&lt;br&gt;[2012-11-14 15:19:26] ClientThread_ServerC@1.1.1.3-thread_3-13/10:&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_1-1/10:1 11 21&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_0-0/10:10 20 30&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_0-5/10:5 15 25&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_0-10/10:&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_2-2/10:2 12 22&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_3-3/10:3 13 23&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_1-6/10:6 16 26&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_1-11/10:&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_4-4/10:4 14 24&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_3-8/10:8 18 28&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_2-7/10:7 17 27&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_4-9/10:9 19 29&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_2-12/10:&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_3-13/10:&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_4-14/10:&lt;br&gt;[2012-11-14 15:19:31] Thread-0 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] ================&lt;br&gt;[2012-11-14 15:19:31] ServerA@1.1.1.1:freshing…&lt;br&gt;[2012-11-14 15:19:31] Thread-12 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] ================&lt;br&gt;[2012-11-14 15:19:31] ServerC@1.1.1.3:freshing…&lt;br&gt;[2012-11-14 15:19:31] Thread-6 get an event.Path:/demo,state:SyncConnected,type:NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] In event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] ================&lt;br&gt;[2012-11-14 15:19:31] ServerB@1.1.1.2:freshing…&lt;br&gt;[2012-11-14 15:19:31] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:31] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:31] SYSTEM VERSION: 1&lt;br&gt;[2012-11-14 15:19:31] Server count:3&lt;br&gt;[2012-11-14 15:19:31] Server count:3&lt;br&gt;[2012-11-14 15:19:31] ServerA@1.1.1.1, mod=0,base=15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_0:0/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_1:1/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_2:2/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_3:3/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerA@1.1.1.1-thread_4:4/15&lt;br&gt;[2012-11-14 15:19:31] ServerA@1.1.1.1:end freshing…&lt;br&gt;[2012-11-14 15:19:31] ================&lt;br&gt;[2012-11-14 15:19:31] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] Server count:3&lt;br&gt;[2012-11-14 15:19:31] ServerC@1.1.1.3, mod=2,base=15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_0:10/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_1:11/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_2:12/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_3:13/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerC@1.1.1.3-thread_4:14/15&lt;br&gt;[2012-11-14 15:19:31] ServerC@1.1.1.3:end freshing…&lt;br&gt;[2012-11-14 15:19:31] ================&lt;br&gt;[2012-11-14 15:19:31] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:31] ServerB@1.1.1.2, mod=1,base=15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_0:5/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_1:6/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_2:7/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_3:8/15&lt;br&gt;[2012-11-14 15:19:31] ClientThread_ServerB@1.1.1.2-thread_4:9/15&lt;br&gt;[2012-11-14 15:19:31] ServerB@1.1.1.2:end freshing…&lt;br&gt;[2012-11-14 15:19:31] ================&lt;br&gt;[2012-11-14 15:19:31] End event: NodeChildrenChanged&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerB@1.1.1.2-thread_0-5/15:5 20&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerA@1.1.1.1-thread_2-2/15:2 17&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerA@1.1.1.1-thread_3-3/15:3 18&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerC@1.1.1.3-thread_0-10/15:10 25&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerA@1.1.1.1-thread_0-0/15:15 30&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerA@1.1.1.1-thread_1-1/15:1 16&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerB@1.1.1.2-thread_1-6/15:6 21&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerC@1.1.1.3-thread_1-11/15:11 26&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerB@1.1.1.2-thread_3-8/15:8 23&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerA@1.1.1.1-thread_4-4/15:4 19&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerB@1.1.1.2-thread_2-7/15:7 22&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerC@1.1.1.3-thread_2-12/15:12 27&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerB@1.1.1.2-thread_4-9/15:9 24&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerC@1.1.1.3-thread_4-14/15:14 29&lt;br&gt;[2012-11-14 15:19:36] ClientThread_ServerC@1.1.1.3-thread_3-13/15:13 28&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerC@1.1.1.3-thread_0-10/15:10 25&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerA@1.1.1.1-thread_0-0/15:15 30&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerB@1.1.1.2-thread_1-6/15:6 21&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerA@1.1.1.1-thread_3-3/15:3 18&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerB@1.1.1.2-thread_0-5/15:5 20&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerA@1.1.1.1-thread_1-1/15:1 16&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerA@1.1.1.1-thread_2-2/15:2 17&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerB@1.1.1.2-thread_3-8/15:8 23&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerB@1.1.1.2-thread_2-7/15:7 22&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerA@1.1.1.1-thread_4-4/15:4 19&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerC@1.1.1.3-thread_1-11/15:11 26&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerC@1.1.1.3-thread_2-12/15:12 27&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerB@1.1.1.2-thread_4-9/15:9 24&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerC@1.1.1.3-thread_4-14/15:14 29&lt;br&gt;[2012-11-14 15:19:41] ClientThread_ServerC@1.1.1.3-thread_3-13/15:13 28&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Zookeeper&lt;/strong&gt;是hadoop的子项目，是google的chubby的开源实现，是一个针对大规模分布式系统的可靠的分布式协调系统。Zookeeper一般部署在一个集群上，通过在集群间维护一个数据树，使得连接到集群的client能够获得统一的数据信息，比如系统公共配置信息、节点存活状态等等。因此，在互联网公司中，zookeeper被广泛运用于统一配置管理、名字服务、分布式同步等。&lt;/p&gt;
&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h2&gt;&lt;p&gt;我们看下这样一种场景：&lt;br&gt;前台系统每时每刻都生成大量数据，这些原生数据由后台系统处理完毕后再作他用，我们暂且不谈这些数据的存储形式，只关注如何能够尽可能高效的处理。举个例子，前台系统可能是微博的前端发布系统、搜索引擎上的广告投放系统，或者是任务发布系统，后台系统则可能是对微博和广告信息的审查系统，比如用户发的微博如果包含近期敏感信息则不予显示，若是任务，后台系统则负责处理任务具体的执行。&lt;br&gt;若数据量和任务量较小，单节点的后台系统或许可以处理得过来，但是如果数据量和任务量很大（比如新浪微博，龙年正月初一0点0分0秒，共有32312条微博同时发布），单节点的后台系统肯定吃不消，这时候，可想而知的是多节点同时处理前台过来的数据。&lt;br&gt;最简单的方法是，按消息id对后台节点数取模（msgid%server_num=mod），每个后台节点取自己那份数据进行处理，这就需要每个节点都知晓当前有多少个后台节点以及本节点所应取的mod数。但是，当某个节点宕机时，这个节点所应处理的数据无法被继续处理了，势必会造成阻塞，除非重新配置各节点上的参数，将节点数server_num减1，并修改各节点取数据的mod数。&lt;br&gt;毋庸置疑，这样非常麻烦！如果能够将这种配置信息（实际上是数据在节点间分配的控制信息）统一管理起来，在配置信息发生变化时，各个后台节点能够及时知晓其变化，就可以避免上述情况的发生。&lt;br&gt;因此，采用多节点处理数据时，有两个问题：&lt;br&gt;1.避免多个节点重复处理同一条数据，否则造成资源浪费。&lt;br&gt;2.不能有数据被遗漏处理，尤其是在有后台节点down掉的时候。&lt;br&gt;也就是说，采用多节点同时处理数据时，需要将数据隔离开，分别给不同的节点处理，而且在有节点宕机的情况下，所有数据也必须可以无误的被其他可用节点处理。如何做到这一点呢，使用zookeeper吧！&lt;br&gt;
    
    </summary>
    
      <category term="分布式应用" scheme="http://maohong.tech/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="zookeeper" scheme="http://maohong.tech/tags/zookeeper/"/>
    
      <category term="分布式协调" scheme="http://maohong.tech/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E8%B0%83/"/>
    
      <category term="横向扩展" scheme="http://maohong.tech/tags/%E6%A8%AA%E5%90%91%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
</feed>
